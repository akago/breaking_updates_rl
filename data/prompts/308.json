{
    "absolute_path_to_file_in_container": "/JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java",
    "errors": [
        {
            "line_number": 10,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[10,27] cannot find symbol",
            "additional_info": "  symbol:   class Client\n  location: package redis.clients.jedis",
            "file_name": "RedisGraphTransaction.java",
            "uid": "ecbadc43-9108-54f4-b0dd-ead4bcfa8711"
        },
        {
            "line_number": 20,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[20,8] com.redislabs.redisgraph.impl.api.RedisGraphTransaction is not abstract and does not override abstract method execGetResponse() in com.redislabs.redisgraph.RedisGraphTransaction",
            "additional_info": "",
            "file_name": "RedisGraphTransaction.java",
            "uid": "d6c388f3-de47-5c6c-af4b-c54ead8bdf59"
        },
        {
            "line_number": 26,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[26,34] cannot find symbol",
            "additional_info": "  symbol:   class Client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "a064d2b9-70a3-5779-82e9-25555cb8ce07"
        },
        {
            "line_number": 41,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[41,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 42,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[42,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 59,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[59,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 60,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[60,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 80,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[80,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 82,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[82,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 102,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[102,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 104,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[104,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 126,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[126,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 127,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[127,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 146,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[146,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 147,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[147,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 166,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[166,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 167,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[167,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 189,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[189,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 191,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[191,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 213,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[213,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 215,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[215,16] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "43d4e1f5-f821-5ec0-a626-2db46c1a01a5"
        },
        {
            "line_number": 265,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[265,9] cannot find symbol",
            "additional_info": "  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "e9eb521c-54a6-5af0-95b1-8d9d5017a6e0"
        },
        {
            "line_number": 266,
            "message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[266,37] cannot find symbol",
            "additional_info": "  symbol:   method getResponse(redis.clients.jedis.Builder<java.lang.String>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
            "file_name": "RedisGraphTransaction.java",
            "uid": "5000fb7d-cb9f-519a-b194-48be7db7c00d"
        }
    ],
    "prompt": "Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation. \nYou are specialized in breaking dependency updates, in which the failure is caused by an external dependency. \nTo solve the failure you can only work on the client code.\n\nAPI upgrade: jedis 3.9.0->4.3.2\n\nthe following client code fails: \n'''java\npackage com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Client;\nimport redis.clients.jedis.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Client client, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(client);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n\n'''\nthe error is triggered in the following specific lines in the previous code:\nimport redis.clients.jedis.Client;\npublic class RedisGraphTransaction extends Transaction\n    public RedisGraphTransaction(Client client, RedisGraph redisGraph) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\nwith the following error message:\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[10,27] cannot find symbol  symbol:   class Client\n  location: package redis.clients.jedis\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[20,8] com.redislabs.redisgraph.impl.api.RedisGraphTransaction is not abstract and does not override abstract method execGetResponse() in com.redislabs.redisgraph.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[26,34] cannot find symbol  symbol:   class Client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[41,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[42,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[59,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[60,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[80,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[82,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[102,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[104,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[126,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[127,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[146,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[147,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[166,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[167,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[189,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[191,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[213,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[215,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[265,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[266,37] cannot find symbol  symbol:   method getResponse(redis.clients.jedis.Builder<java.lang.String>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\nThe error is caused by a change in the API of the dependency. The new library version includes the following changes:\nFormat: element | nature | kind\nredis.clients.jedis.JedisSentinelPool.infiniteSoTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.zunionWithScores | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.incrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.clusterKeySlot | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zunionstore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSocketFactory.setSoTimeout | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.setbit | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.user | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.aclLog | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.blpop | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.bitcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.move | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.exists | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrevrangeByScoreWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.MultiKeyCommandsPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.Jedis.zrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.STREAM_CONSUMERS_INFO_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrangeWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getNodes | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getNodeKey | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.del | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.append | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zcard | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zpopmax | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xinfoStream | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.georadiusByMemberReadonly | DELETION | METHOD_REMOVED\njava.lang.Object.getClass | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.xrevrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.lpushx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.toString | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.pubsubNumSub | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xreadGroup | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.EVAL_RESULT | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.xclaim | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.georadiusByMemberStore | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.scan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sscan | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.BinaryScriptingCommandsPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisShardInfo | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.hstrlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.geoadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.hset | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xinfoConsumers | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.clusterCountKeysInSlot | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xclaim | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.georadiusByMemberStore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisFactory.setHostAndPort | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.scard | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.dataSource | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.zrangeByScoreWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.hexists | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.llen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zremrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.georadiusStore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.pfadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis | MUTATION | SUPERTYPE_REMOVED\nredis.clients.jedis.JedisSocketFactory.setPort | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.TUPLE_ZSET | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.msetnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.EVAL_BINARY_RESULT | DELETION | FIELD_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_READ_RESPONSE | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.scan | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.sunionstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hset | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hstrlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zincrby | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.srem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Pipeline.getClient | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.aclGetUser | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSocketFactory.getPort | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.clusterReset | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.ACCESS_CONTROL_LOG_ENTRY_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.expire | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.soTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.rpushx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.pttl | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zlexcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.pfadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.TUPLE | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.sort | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Transaction.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisCluster.renamenx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zremrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSocketFactory.getDescription | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.RedisPipeline.expire | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.pexpireAt | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.lpush | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.llen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.pexpire | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.srem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.Jedis.xread | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.MultiKeyBinaryRedisPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisSocketFactory.getSoTimeout | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.BinaryRedisPipeline.restoreReplace | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.ClusterPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.georadiusStore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.xclaim | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.lrem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.GEORADIUS_WITH_PARAMS_RESULT | MUTATION | FIELD_TYPE_CHANGED\njava.lang.Object.clone | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool.poolConfig | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisSocketFactory.getConnectionTimeout | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrandmemberWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xread | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisSocketFactory.setConnectionTimeout | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisMonitor.client | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.setbit | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.hincrByFloat | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.BinaryRedisPipeline.restore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool | MUTATION | SUPERTYPE_REMOVED\nredis.clients.jedis.Jedis.strlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xpending | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.persist | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.setupNodeIfNotExist | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zunion | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool.sentinelUser | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.waitReplicas | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zunionstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zremrangeByRank | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.BinaryRedisPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.Jedis.zinter | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zdiffStore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.password | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisSentinelPool.sentinelPassword | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.zrevrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.BYTE_ARRAY_ZSET | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.xtrim | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.notify | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool.connectionTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.clientId | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zinterstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.setDataSource | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.hincrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.scan | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.incrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.getbit | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.rpush | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xadd | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.getbit | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zincrby | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.STREAM_PENDING_ENTRY_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.zunionWithScores | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.log | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.hincrByFloat | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getShuffledNodesPool | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.BinaryRedisPipeline.expire | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.sadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.decrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.Jedis.zscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.decrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xpending | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zinter | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.brpop | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.sunionstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrangeWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.touch | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.getParams | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.sort | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.copy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.setnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xgroupDelConsumer | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.database | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.zrandmember | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.BYTE_ARRAY_MAP | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.geoadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.PipelineBase.sendCommand | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.setbit | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xautoclaim | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisPool | MUTATION | SUPERTYPE_REMOVED\nredis.clients.jedis.JedisSocketFactory.getHost | DELETION | METHOD_REMOVED\njava.lang.Object.hashCode | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.append | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xreadGroup | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.hsetnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.pexpire | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.decr | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.sismember | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xread | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zinterWithScores | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_AUTO_CLAIM_RESPONSE | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xdel | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSocketFactory.createSocket | MUTATION | METHOD_NO_LONGER_THROWS_CHECKED_EXCEPTION\nredis.clients.jedis.JedisCluster.sscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.smove | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.georadiusByMember | DELETION | METHOD_REMOVED\nredis.clients.jedis.Transaction.getClient | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrevrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.ttl | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BinaryJedis.getClient | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getSlotPool | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.bitop | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.georadiusReadonly | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.xread | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.decr | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getNode | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zinterWithScores | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.sort | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisPoolAbstract | DELETION | TYPE_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_ENTRY_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zinterstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.setnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.persist | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Pipeline.multi | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool.sentinelConnectionTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.setrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xrevrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.lrem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.PUBSUB_NUMSUB_MAP | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xack | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.ACCESS_CONTROL_USER | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrevrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.BinaryRedisPipeline.setex | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.rpush | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisMonitor.proceed | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.linsert | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.geodist | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.rpushx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.expireAt | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisCluster.sinterstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.sentinelClientName | DELETION | FIELD_REMOVED\njava.lang.Object.wait | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.BasicRedisPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.Pipeline.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisCluster.zremrangeByRank | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.DefaultJedisSocketFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisCluster.bitop | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.incr | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSocketFactory.setHost | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.zrevrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.notifyAll | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.echo | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.STRING_ZSET | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.zremrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrangeByScoreWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.incr | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zunion | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisClusterHostAndPortMap | DELETION | TYPE_REMOVED\nredis.clients.jedis.Jedis.zrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zpopmin | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.del | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.geodist | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisPubSub.proceed | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.clientName | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.setbit | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.slowlogGet | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.aclLog | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zunionstore | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.hscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zscan | DELETION | METHOD_REMOVED\nredis.clients.jedis.MultiKeyPipelineBase.client | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.zrevrangeWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.bitpos | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.RedisPipeline.restore | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.zinterstore | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.zrandmemberWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.discoverClusterNodesAndSlots | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.unlink | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.STREAM_ENTRY | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.incrByFloat | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.lpush | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrevrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xreadGroup | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zunionstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.georadius | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster | MUTATION | SUPERTYPE_REMOVED\nredis.clients.jedis.JedisCluster.hscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.exists | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.STREAM_GROUP_INFO_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zlexcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.clientUnblock | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sinterstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xinfoGroup | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.ScriptingCommandsPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.Protocol.sendCommand | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrandmember | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.touch | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSlotBasedConnectionHandler | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.zremrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.strlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisPool.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\nredis.clients.jedis.Connection.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.Jedis.georadiusByMemberReadonly | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.hlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.renewClusterSlots | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_INFO | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zpopmax | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.expire | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.aclDelUser | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xclaim | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zdiffStore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zcard | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sort | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.linsert | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xgroupDestroy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xreadGroup | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.copy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.hdel | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sdiffstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.scard | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xautoclaim | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\nredis.clients.jedis.Jedis.zdiffWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Client | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.sdiffstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xgroupDelConsumer | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.setrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.OBJECT | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.msetnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.incrByFloat | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrevrangeWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.finalize | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.sscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.publish | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zinterstore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.xadd | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.georadiusReadonly | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.zadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.bitcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.sentinelSoTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.hdel | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterCommand | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.zdiffWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.unlink | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.georadiusByMember | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_PENDING_SUMMARY | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrevrangeByScoreWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.RedisPipeline.setex | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.sismember | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterConnectionHandler | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.zrevrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.pexpireAt | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.smove | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hincrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.publish | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hexists | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.georadius | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.hscan | DELETION | METHOD_REMOVED\nredis.clients.jedis.util.Pool.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.Jedis.restoreReplace | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.expireAt | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.RedisPipeline.restoreReplace | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.bitpos | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.ttl | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.pttl | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hsetnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.masterListeners | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.lpushx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zpopmin | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.equals | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.RedisPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.BinaryJedis.client | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisSocketFactory.updateHostAndPort | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisPubSub.proceedWithPatterns | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.renamenx | MUTATION | METHOD_RETURN_TYPE_CHANGED\n\n- Identify the specific API changes that are causing the failure in the client code. \n- Compare the old and new API versions, noting any changes in method signatures, return types, or parameter lists. \n- Determine which parts of the client code need to be updated to accommodate these API changes. \n- Consider any constraints or requirements for the fix (e.g., not changing function signatures, potential import adjustments). \n- Plan the minimal set of changes needed to fix the issue while keeping the code functional and compliant with the new API. \n- Consider potential side effects of the proposed changes on other parts of the code. \n- Ensure that the planned changes will result in a complete and compilable class. \n- If applicable, note any additional imports that may be needed due to the API changes.  \n- Propose a patch that can be applied to the code to fix the issue. \n- Return only a complete and compilable class in a fenced code block. \n- You CANNOT change the function signature of any method but may create variables if it simplifies the code. \n- You CAN remove the @Override annotation IF AND ONLY IF the method no longer overrides a method in the updated dependency version. \n- If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version. \n- Avoid removing any existing code unless it directly causes a compilation or functionality error. \n- Return only the fixed class, ensuring it fully compiles and adheres to these constraints.",
    "buggy_lines": "import redis.clients.jedis.Client;\npublic class RedisGraphTransaction extends Transaction\n    public RedisGraphTransaction(Client client, RedisGraph redisGraph) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n        return getResponse(new Builder<ResultSet>() {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);",
    "error_message": "[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[10,27] cannot find symbol  symbol:   class Client\n  location: package redis.clients.jedis\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[20,8] com.redislabs.redisgraph.impl.api.RedisGraphTransaction is not abstract and does not override abstract method execGetResponse() in com.redislabs.redisgraph.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[26,34] cannot find symbol  symbol:   class Client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[41,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[42,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[59,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[60,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[80,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[82,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[102,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[104,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[126,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[127,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[146,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[147,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[166,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[167,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[189,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[191,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[213,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[215,16] cannot find symbol  symbol:   method getResponse(<anonymous redis.clients.jedis.Builder<com.redislabs.redisgraph.ResultSet>>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[265,9] cannot find symbol  symbol:   variable client\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction\n[ERROR] /JRedisGraph/src/main/java/com/redislabs/redisgraph/impl/api/RedisGraphTransaction.java:[266,37] cannot find symbol  symbol:   method getResponse(redis.clients.jedis.Builder<java.lang.String>)\n  location: class com.redislabs.redisgraph.impl.api.RedisGraphTransaction",
    "api_diff": "Format: element | nature | kind\nredis.clients.jedis.JedisSentinelPool.infiniteSoTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.zunionWithScores | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.incrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.clusterKeySlot | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zunionstore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSocketFactory.setSoTimeout | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.setbit | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.user | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.aclLog | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.blpop | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.bitcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.move | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.exists | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrevrangeByScoreWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.MultiKeyCommandsPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.Jedis.zrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.STREAM_CONSUMERS_INFO_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrangeWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getNodes | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getNodeKey | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.del | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.append | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zcard | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zpopmax | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xinfoStream | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.georadiusByMemberReadonly | DELETION | METHOD_REMOVED\njava.lang.Object.getClass | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.xrevrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.lpushx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.toString | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.pubsubNumSub | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xreadGroup | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.EVAL_RESULT | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.xclaim | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.georadiusByMemberStore | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.scan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sscan | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.BinaryScriptingCommandsPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisShardInfo | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.hstrlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.geoadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.hset | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xinfoConsumers | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.clusterCountKeysInSlot | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xclaim | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.georadiusByMemberStore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisFactory.setHostAndPort | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.scard | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.dataSource | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.zrangeByScoreWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.hexists | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.llen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zremrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.georadiusStore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.pfadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis | MUTATION | SUPERTYPE_REMOVED\nredis.clients.jedis.JedisSocketFactory.setPort | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.TUPLE_ZSET | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.msetnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.EVAL_BINARY_RESULT | DELETION | FIELD_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_READ_RESPONSE | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.scan | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.sunionstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hset | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hstrlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zincrby | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.srem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Pipeline.getClient | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.aclGetUser | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSocketFactory.getPort | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.clusterReset | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.ACCESS_CONTROL_LOG_ENTRY_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.expire | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.soTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.rpushx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.pttl | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zlexcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.pfadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.TUPLE | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.sort | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Transaction.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisCluster.renamenx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zremrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSocketFactory.getDescription | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.RedisPipeline.expire | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.pexpireAt | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.lpush | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.llen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.pexpire | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.srem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.Jedis.xread | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.MultiKeyBinaryRedisPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisSocketFactory.getSoTimeout | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.BinaryRedisPipeline.restoreReplace | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.ClusterPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.georadiusStore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.xclaim | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.lrem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.GEORADIUS_WITH_PARAMS_RESULT | MUTATION | FIELD_TYPE_CHANGED\njava.lang.Object.clone | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool.poolConfig | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisSocketFactory.getConnectionTimeout | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrandmemberWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xread | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisSocketFactory.setConnectionTimeout | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisMonitor.client | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.setbit | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.hincrByFloat | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.BinaryRedisPipeline.restore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool | MUTATION | SUPERTYPE_REMOVED\nredis.clients.jedis.Jedis.strlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xpending | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.persist | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.setupNodeIfNotExist | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zunion | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool.sentinelUser | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.waitReplicas | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zunionstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zremrangeByRank | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.BinaryRedisPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.Jedis.zinter | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zdiffStore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.password | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisSentinelPool.sentinelPassword | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.zrevrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.BYTE_ARRAY_ZSET | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.xtrim | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.notify | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool.connectionTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.clientId | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zinterstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.setDataSource | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.hincrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.scan | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.incrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.getbit | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.rpush | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xadd | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.getbit | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zincrby | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.STREAM_PENDING_ENTRY_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.zunionWithScores | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.log | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.hincrByFloat | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getShuffledNodesPool | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.BinaryRedisPipeline.expire | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.sadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.decrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.Jedis.zscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.decrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xpending | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zinter | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.brpop | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.sunionstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrangeWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.touch | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.getParams | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.sort | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.copy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.setnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xgroupDelConsumer | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.database | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.zrandmember | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.BYTE_ARRAY_MAP | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.geoadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.PipelineBase.sendCommand | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.setbit | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xautoclaim | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisPool | MUTATION | SUPERTYPE_REMOVED\nredis.clients.jedis.JedisSocketFactory.getHost | DELETION | METHOD_REMOVED\njava.lang.Object.hashCode | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.append | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xreadGroup | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.hsetnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.pexpire | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.decr | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.sismember | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xread | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zinterWithScores | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_AUTO_CLAIM_RESPONSE | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xdel | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSocketFactory.createSocket | MUTATION | METHOD_NO_LONGER_THROWS_CHECKED_EXCEPTION\nredis.clients.jedis.JedisCluster.sscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.smove | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.georadiusByMember | DELETION | METHOD_REMOVED\nredis.clients.jedis.Transaction.getClient | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrevrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.ttl | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BinaryJedis.getClient | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getSlotPool | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.bitop | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.georadiusReadonly | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.xread | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.decr | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.getNode | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zinterWithScores | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.sort | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisPoolAbstract | DELETION | TYPE_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_ENTRY_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zinterstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.setnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.persist | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Pipeline.multi | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisSentinelPool.sentinelConnectionTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.setrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xrevrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.lrem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.PUBSUB_NUMSUB_MAP | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xack | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.ACCESS_CONTROL_USER | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrevrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.BinaryRedisPipeline.setex | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.rpush | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisMonitor.proceed | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.linsert | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.geodist | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.rpushx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.expireAt | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisCluster.sinterstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.sentinelClientName | DELETION | FIELD_REMOVED\njava.lang.Object.wait | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.BasicRedisPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.Pipeline.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisCluster.zremrangeByRank | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.DefaultJedisSocketFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.JedisCluster.bitop | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.incr | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSocketFactory.setHost | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.zrevrangeByLex | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.notifyAll | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.echo | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.STRING_ZSET | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.zremrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrangeByScoreWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.incr | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zunion | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisClusterHostAndPortMap | DELETION | TYPE_REMOVED\nredis.clients.jedis.Jedis.zrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zpopmin | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.del | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.geodist | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisPubSub.proceed | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.clientName | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.setbit | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.slowlogGet | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.aclLog | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zunionstore | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.hscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zscan | DELETION | METHOD_REMOVED\nredis.clients.jedis.MultiKeyPipelineBase.client | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.zrevrangeWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.bitpos | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.RedisPipeline.restore | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.zinterstore | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.zrandmemberWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.discoverClusterNodesAndSlots | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.unlink | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.STREAM_ENTRY | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.incrByFloat | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.lpush | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrevrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xreadGroup | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zunionstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.georadius | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster | MUTATION | SUPERTYPE_REMOVED\nredis.clients.jedis.JedisCluster.hscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.exists | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.STREAM_GROUP_INFO_LIST | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zlexcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.clientUnblock | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sinterstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xinfoGroup | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.ScriptingCommandsPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.Protocol.sendCommand | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrandmember | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.touch | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSlotBasedConnectionHandler | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.zremrangeByScore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.strlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisPool.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\nredis.clients.jedis.Connection.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.Jedis.georadiusByMemberReadonly | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.hlen | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterInfoCache.renewClusterSlots | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_INFO | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zpopmax | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.expire | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.aclDelUser | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xclaim | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zdiffStore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zcard | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sort | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.linsert | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.zrem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xgroupDestroy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xreadGroup | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.copy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.hdel | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sdiffstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.scard | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.xautoclaim | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\nredis.clients.jedis.Jedis.zdiffWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Client | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.sdiffstore | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.xgroupDelConsumer | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.setrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.BuilderFactory.OBJECT | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisCluster.msetnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.incrByFloat | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrevrangeWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.finalize | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.sscan | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.publish | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zinterstore | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisCluster.xadd | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.georadiusReadonly | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.zadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrem | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.bitcount | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.sentinelSoTimeout | DELETION | FIELD_REMOVED\nredis.clients.jedis.Jedis.hdel | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterCommand | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.zdiffWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.unlink | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.georadiusByMember | DELETION | METHOD_REMOVED\nredis.clients.jedis.BuilderFactory.STREAM_PENDING_SUMMARY | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.Jedis.zrevrangeByScoreWithScores | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.RedisPipeline.setex | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.sismember | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisClusterConnectionHandler | DELETION | TYPE_REMOVED\nredis.clients.jedis.JedisCluster.zrevrange | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.pexpireAt | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.smove | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hincrBy | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.publish | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hexists | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.sadd | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.georadius | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.hscan | DELETION | METHOD_REMOVED\nredis.clients.jedis.util.Pool.<init> | DELETION | CONSTRUCTOR_REMOVED\nredis.clients.jedis.Jedis.restoreReplace | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.expireAt | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.commands.RedisPipeline.restoreReplace | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.bitpos | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.ttl | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.pttl | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.Jedis.hsetnx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisSentinelPool.masterListeners | MUTATION | FIELD_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.lpushx | MUTATION | METHOD_RETURN_TYPE_CHANGED\nredis.clients.jedis.JedisCluster.zpopmin | MUTATION | METHOD_RETURN_TYPE_CHANGED\njava.lang.Object.equals | DELETION | METHOD_REMOVED\nredis.clients.jedis.commands.RedisPipeline | DELETION | TYPE_REMOVED\nredis.clients.jedis.BinaryJedis.client | DELETION | FIELD_REMOVED\nredis.clients.jedis.JedisSocketFactory.updateHostAndPort | DELETION | METHOD_REMOVED\nredis.clients.jedis.JedisPubSub.proceedWithPatterns | DELETION | METHOD_REMOVED\nredis.clients.jedis.Jedis.renamenx | MUTATION | METHOD_RETURN_TYPE_CHANGED",
    "original_code": "package com.redislabs.redisgraph.impl.api;\n\nimport com.redislabs.redisgraph.RedisGraph;\nimport com.redislabs.redisgraph.ResultSet;\nimport com.redislabs.redisgraph.impl.Utils;\nimport com.redislabs.redisgraph.impl.graph_cache.RedisGraphCaches;\nimport com.redislabs.redisgraph.impl.resultset.ResultSetImpl;\nimport redis.clients.jedis.Builder;\nimport redis.clients.jedis.BuilderFactory;\nimport redis.clients.jedis.Client;\nimport redis.clients.jedis.Response;\nimport redis.clients.jedis.Transaction;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * This class is extending Jedis Transaction\n */\npublic class RedisGraphTransaction extends Transaction\n        implements com.redislabs.redisgraph.RedisGraphTransaction, RedisGraphCacheHolder {\n\n    private final RedisGraph redisGraph;\n    private RedisGraphCaches caches;\n\n    public RedisGraphTransaction(Client client, RedisGraph redisGraph) {\n        // init as in Jedis\n        super(client);\n\n        this.redisGraph = redisGraph;\n    }\n\n    /**\n     * Execute a Cypher query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-oly query.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query) {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, long timeout) {\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher read-only query with timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, long timeout) {\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, query, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Execute a Cypher query with arguments\n     *\n     * @param graphId a graph to perform the query on\n     * @param query Cypher query\n     * @param args\n     * @return response with a result set\n     * @deprecated use {@link #query(String, String, Map)} instead.\n     */\n    @Deprecated\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Object... args) {\n        String preparedQuery = Utils.prepareQuery(query, args);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING);\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> query(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.QUERY, graphId, preparedQuery, Utils.COMPACT_STRING, Utils.TIMEOUT_STRING,\n                Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Executes a cypher read-only query with parameters and timeout.\n     *\n     * NOTE: timeout is simply sent to DB. Socket timeout will not be changed.\n     * @param graphId a graph to perform the query on.\n     * @param query Cypher query.\n     * @param params parameters map.\n     * @param timeout\n     * @return a response which builds the result set with the query answer.\n     */\n    @Override\n    public Response<ResultSet> readOnlyQuery(String graphId, String query, Map<String, Object> params, long timeout) {\n        String preparedQuery = Utils.prepareQuery(query, params);\n        client.sendCommand(RedisGraphCommand.RO_QUERY, graphId, preparedQuery, Utils.COMPACT_STRING,\n                Utils.TIMEOUT_STRING, Long.toString(timeout));\n        return getResponse(new Builder<ResultSet>() {\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            public ResultSet build(Object o) {\n                return new ResultSetImpl((List<Object>) o, redisGraph, caches.getGraphCache(graphId));\n            }\n        });\n    }\n\n    /**\n     * Invokes stored procedures without arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure) {\n        return callProcedure(graphId, procedure, Utils.DUMMY_LIST, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invokes stored procedure with arguments, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure procedure name to invoke\n     * @param args procedure arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args) {\n        return callProcedure(graphId, procedure, args, Utils.DUMMY_MAP);\n    }\n\n    /**\n     * Invoke a stored procedure, in multi/exec context\n     * @param graphId a graph to perform the query on\n     * @param procedure - procedure to execute\n     * @param args - procedure arguments\n     * @param kwargs - procedure output arguments\n     * @return response with result set with the procedure data\n     */\n    public Response<ResultSet> callProcedure(String graphId, String procedure, List<String> args,\n            Map<String, List<String>> kwargs) {\n        String preparedProcedure = Utils.prepareProcedure(procedure, args, kwargs);\n        return query(graphId, preparedProcedure);\n    }\n\n    /**\n     * Deletes the entire graph, in multi/exec context\n     * @param graphId graph to delete\n     * @return response with the deletion running time statistics\n     */\n    public Response<String> deleteGraph(String graphId) {\n        client.sendCommand(RedisGraphCommand.DELETE, graphId);\n        Response<String> response = getResponse(BuilderFactory.STRING);\n        caches.removeGraphCache(graphId);\n        return response;\n    }\n\n    @Override\n    public void setRedisGraphCaches(RedisGraphCaches caches) {\n        this.caches = caches;\n    }\n\n}\n",
    "project": "JRedisGraph",
    "libraryName": "jedis",
    "libraryGroupID": "redis.clients",
    "newVersion": "4.3.2",
    "previousVersion": "3.9.0",
    "breakingCommit": "ea03f6488449fcfe8cd0a678b4c64891e1427a32"
}