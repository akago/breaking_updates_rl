{
    "relative_path": "PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Detect/NPCTeleport.java",
    "prompt": "Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation. \nYou are specialized in breaking dependency updates, in which the failure is caused by an external dependency. \nTo solve the failure you can only work on the client code.\n\nthe following client code fails: \n'''java\npackage ml.peya.plugins.Detect;\n\nimport develop.p2p.lib.*;\nimport ml.peya.plugins.DetectClasses.*;\nimport ml.peya.plugins.Enum.*;\nimport ml.peya.plugins.*;\nimport net.minecraft.server.v1_12_R1.*;\nimport org.bukkit.*;\nimport org.bukkit.command.*;\nimport org.bukkit.craftbukkit.v1_12_R1.entity.*;\nimport org.bukkit.entity.*;\nimport org.bukkit.metadata.*;\nimport org.bukkit.scheduler.*;\n\nimport java.util.*;\n\nimport static ml.peya.plugins.Utils.MessageEngine.get;\nimport static ml.peya.plugins.Variables.cheatMeta;\nimport static ml.peya.plugins.Variables.config;\n\n/**\n * NPC\u306eTeleport\u3092\u7ba1\u7406\u3059\u308b\u3002\n */\npublic class NPCTeleport\n{\n    /**\n     * \u30c6\u30ec\u30dd\u30fc\u30c8\u30a9\uff01\n     *\n     * @param player    \u30d7\u30ec\u30a4\u30e4\u30fc\u3002\n     * @param target    \u30bf\u30fc\u30b2\u30c3\u30c8\u3002\n     * @param arm       \u9632\u5177\u3002\n     * @param tpCase    \u30c6\u30ec\u30dd\u30fc\u30c8\u30b1\u30fc\u30b9\u3002\n     * @param reachMode \u30ea\u30fc\u30c1\u30e2\u30fc\u30c9\u304b\u3069\u3046\u304b\u3002\n     */\n    public static void teleport(Player player, EntityPlayer target, ItemStack[] arm, DetectType tpCase, boolean reachMode)\n    {\n        switch (tpCase)\n        {\n            case AURA_BOT:\n                auraBotTeleport(player, target, arm, reachMode);\n                break;\n            case AURA_PANIC:\n                auraPanic_teleport(player, target, arm, tpCase.getPanicCount(), tpCase.getSender(), reachMode);\n                break;\n            default:\n                throw new IllegalStateException(\"Unexpected value: \" + tpCase);\n        }\n    }\n\n    /**\n     * Aurapanic\u306e\u30c6\u30ec\u30dd\u30fc\u30c8\u3002\n     *\n     * @param player    \u30d7\u30ec\u30a4\u30e4\u30fc\u3002\n     * @param target    \u30bf\u30fc\u30b2\u30c3\u30c8\u3002\n     * @param arm       \u88c5\u5099\u3002\n     * @param count     \u56de\u6570\u3002\n     * @param sender    \u30a4\u30d9\u30f3\u30c8sender\u3002\n     * @param reachMode \u30ea\u30fc\u30c1\u30e2\u30fc\u30c9\u304b\u3069\u3046\u304b\u3002\n     */\n    private static void auraPanic_teleport(Player player, EntityPlayer target, ItemStack[] arm, int count, CommandSender sender, boolean reachMode)\n    {\n        final double range = reachMode ? config.getDouble(\"npc.reachPanicRange\"): config.getDouble(\"npc.panicRange\");\n        final double[] clt = {0.0};\n        final int[] now = {0};\n\n        PlayerConnection connection = ((CraftPlayer) player).getHandle().playerConnection;\n\n        int sec = config.getInt(\"npc.seconds\");\n\n        new BukkitRunnable()\n        {\n            @Override\n            public void run()\n            {\n                now[0]++;\n\n                connection.sendPacket(new PacketPlayOutAnimation(((CraftPlayer) player).getHandle(), 1));\n\n                HashMap<String, Object> map = new HashMap<>();\n                map.put(\"hit\", now[0]);\n                map.put(\"max\", count);\n\n                sender.sendMessage(get(\"message.auraCheck.panic.lynx\", map));\n                if (now[0] >= count)\n                    this.cancel();\n            }\n        }.runTaskTimer(PeyangSuperbAntiCheat.getPlugin(), 0, (long) (10 * ((1.5 / count) * sec)));\n\n\n        new BukkitRunnable()\n        {\n            public void run()\n            {\n                for (double i = 0; i < Math.PI * 2; i++)\n                {\n                    Location center = player.getLocation();\n\n                    if (center.getPitch() <= 0.0f || center.getPitch() > 15.0f)\n                        center.setPitch(0.0f);\n\n                    Location n = center.add(center.getDirection().multiply(0 - range));\n\n                    n.setY(center.getY() + range);\n\n                    n.setPitch(50);\n\n                    float head = ((CraftPlayer) player).getHandle().getHeadRotation() * 0.5f;\n\n                    if (head < 0)\n                        head *= 2;\n\n                    NPC.setLocation(n, target);\n                    connection.sendPacket(new PacketPlayOutEntityTeleport(target));\n                    connection.sendPacket(new PacketPlayOutEntityHeadRotation(target, (byte) head));\n\n                    NPC.setArmor(player, target, arm);\n                    float finalHead = head;\n                    new BukkitRunnable()\n                    {\n                        @Override\n                        public void run()\n                        {\n                            Bukkit.getOnlinePlayers().parallelStream().filter(p -> p.hasPermission(\"psac.viewnpc\"))\n                                .forEachOrdered(p ->\n                                {\n                                    ((CraftPlayer) p).getHandle().playerConnection\n                                        .sendPacket(new PacketPlayOutEntityTeleport(target));\n                                    ((CraftPlayer) p).getHandle().playerConnection\n                                        .sendPacket(new PacketPlayOutEntityHeadRotation(target, (byte) finalHead));\n                                    NPC.setArmor(p, target, arm);\n                                });\n                            this.cancel();\n                        }\n                    }.runTask(PeyangSuperbAntiCheat.getPlugin());\n                }\n\n                clt[0] += 0.035;\n                if (clt[0] >= sec)\n                {\n                    Variables.logger.info(\"Finished\");\n                    this.cancel();\n                }\n            }\n        }.runTaskTimer(PeyangSuperbAntiCheat.getPlugin(), 0, 1);\n    }\n\n    /**\n     * AuraBot\u306e\u30c6\u30ec\u30dd\u30fc\u30c8\u3002\n     *\n     * @param player    \u30d7\u30ec\u30a4\u30e4\u30fc\u3002\n     * @param target    \u30bf\u30fc\u30b2\u30c3\u30c8\u3002\n     * @param arm       \u88c5\u5099\u3002\n     * @param reachMode \u30ea\u30fc\u30c1\u30e2\u30fc\u30c9\u304b\u3069\u3046\u304b\u3002\n     */\n    private static void auraBotTeleport(Player player, EntityPlayer target, ItemStack[] arm, boolean reachMode)\n    {\n        final double[] time = {0.0};\n        final double radius = reachMode ? config.getDouble(\"npc.reachRange\"): config.getDoubleList(\"npc.range\")\n            .get(new Random().nextInt(config.getDoubleList(\"npc.range\").size()));\n\n        WaveCreator ypp = new WaveCreator(10.0, 100.0, 10.0);\n\n        final int[] count = {0};\n        BukkitRunnable r = new BukkitRunnable()\n        {\n            public void run()\n            {\n                double speed = 0.0;\n\n                if (player.hasMetadata(\"speed\"))\n                    for (MetadataValue value : player.getMetadata(\"speed\"))\n                        if (value.getOwningPlugin().getName().equals(PeyangSuperbAntiCheat.getPlugin().getName()))\n                            speed = value.asDouble() * 2.0;\n                for (double i = 0; i < Math.PI * 2; i++)\n                {\n                    double rangeTmp = radius;\n\n                    if (config.getBoolean(\"npc.wave\"))\n                        rangeTmp = new WaveCreator(radius - 0.1, radius, config.getDouble(\"npc.waveMin\"))\n                            .get(0.01, true);\n\n                    final Location center = player.getLocation();\n                    final Location n = new Location(\n                        center.getWorld(),\n                        auraBotXPos(time[0], rangeTmp + speed) + center.getX(),\n                        center.getY() + new WaveCreator(1.0, 2.0, 0.0).get(0.01, count[0] < 20),\n                        auraBotZPos(time[0], rangeTmp + speed) + center.getZ(),\n                        (float) ypp.getStatic(),\n                        (float) ypp.get(4.5, false)\n                    );\n\n                    NPC.setLocation(n, target);\n                    ((CraftPlayer) player).getHandle().playerConnection\n                        .sendPacket(new PacketPlayOutEntityTeleport(target));\n\n                    NPC.setArmor(player, target, arm);\n                    new BukkitRunnable()\n                    {\n                        @Override\n                        public void run()\n                        {\n                            Bukkit.getOnlinePlayers()\n                                .parallelStream()\n                                .filter(p -> p.hasPermission(\"psac.viewnpc\"))\n                                .forEachOrdered(p ->\n                                {\n                                    ((CraftPlayer) p).getHandle().playerConnection\n                                        .sendPacket(new PacketPlayOutEntityTeleport(target));\n                                    NPC.setArmor(p, target, arm);\n                                });\n                            this.cancel();\n                        }\n                    }.runTask(PeyangSuperbAntiCheat.getPlugin());\n                    count[0]++;\n                    CheatDetectNowMeta meta = cheatMeta.getMetaByPlayerUUID(player.getUniqueId());\n                    if (meta == null) continue;\n                    meta.setNpcLocation(n.toVector());\n                }\n                time[0] += config.getDouble(\"npc.time\") + (config.getBoolean(\"npc.speed.wave\")\n                    ? new WaveCreator(0.0, config.getDouble(\"npc.speed.waveRange\"), 0 - config.getDouble(\"npc.speed.waveRange\")).get(0.001, true)\n                    : 0.0);\n            }\n        };\n        r.runTaskTimer(PeyangSuperbAntiCheat.getPlugin(), 0, 1);\n\n        new BukkitRunnable()\n        {\n            @Override\n            public void run()\n            {\n                r.cancel();\n                this.cancel();\n            }\n        }.runTaskLater(PeyangSuperbAntiCheat.getPlugin(), 20 * (config.getLong(\"npc.seconds\")));\n\n    }\n\n    /**\n     * Aurabot\u306ez\u8ef8\u3092\u7b97\u51fa\u3059\u308b\u3002\n     *\n     * @param time   \u6642\u9593\u3002\n     * @param radius \u534a\u5f84\u3002\n     * @return \u4f4d\u7f6e\u3002\n     */\n    private static double auraBotZPos(double time, double radius)\n    {\n        return Math.sin(time) * radius * Math.cos(Math.PI / 180 * 360.0);\n    }\n\n    /**\n     * Aurabot\u306ex\u8ef8\u3092\u7b97\u51fa\u3059\u308b\u3002\n     *\n     * @param time   \u6642\u9593\u3002\n     * @param radius \u534a\u5f84\u3002\n     * @return \u4f4d\u7f6e\u3002\n     */\n    private static double auraBotXPos(double time, double radius)\n    {\n        return Math.cos(time) * radius;\n    }\n}\n\n'''\nthe error is triggered in the following specific lines in the previous code:\n\nwith the following error message:\n[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Detect/NPCTeleport.java:[3,1] package develop.p2p.lib does not exist\n[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Detect/NPCTeleport.java:[161,9] cannot find symbol  symbol:   class WaveCreator\n  location: class ml.peya.plugins.Detect.NPCTeleport\n[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Detect/NPCTeleport.java:[179,40] cannot find symbol  symbol: class WaveCreator\n[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Detect/NPCTeleport.java:[186,45] cannot find symbol  symbol: class WaveCreator\n[ERROR] /PeyangSuperbAntiCheat/src/main/java/ml/peya/plugins/Detect/NPCTeleport.java:[220,27] cannot find symbol  symbol: class WaveCreator\nThe error is caused by a change in the API of the dependency. The new library version includes the following changes:\nFormat: element | nature | kind\ndevelop.p2p.lib.LoggerChanger | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.bukkit.Say2Functional | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.SQLModifier | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.FileConfiguration | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.LearnMath | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.TimeParser | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.bukkit.TitleNotification | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.WaveCreator | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.bukkit.Say2Functional$FunctionalEntry | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.ExceptionUtils | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.OptGraphGenerator | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.LeetConverter | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.Intellij | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.FieldModifier | DELETION | TYPE_REMOVED\ndevelop.p2p.lib.bukkit.ItemUtils | DELETION | TYPE_REMOVED\nBefore proposing a fix, please analyze the situation and plan your approach within\n<repair strategy> tags:\n\n- Identify the specific API changes that are causing the failure in the client code. \n- Compare the old and new API versions, noting any changes in method signatures, return types, or parameter lists. \n- Determine which parts of the client code need to be updated to accommodate these API changes. \n- Consider any constraints or requirements for the fix (e.g., not changing function signatures, potential import adjustments). \n- Plan the minimal set of changes needed to fix the issue while keeping the code functional and compliant with the new API. \n- Consider potential side effects of the proposed changes on other parts of the code. \n- Ensure that the planned changes will result in a complete and compilable class. \n- If applicable, note any additional imports that may be needed due to the API changes.  \n- Propose a patch that can be applied to the code to fix the issue. \n- Return only a complete and compilable class in a fenced code block. \n- You CANNOT change the function signature of any method but may create variables if it simplifies the code. \n- You CAN remove the @Override annotation IF AND ONLY IF the method no longer overrides a method in the updated dependency version. \n- If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version. \n- Avoid removing any existing code unless it directly causes a compilation or functionality error. \n- Return only the fixed class, ensuring it fully compiles and adheres to these constraints.",
    "project": "PeyangSuperbAntiCheat",
    "libraryName": "PeyangSuperLibrary",
    "libraryGroupID": "com.github.P2P-Develop",
    "newVersion": "114.191.98.10",
    "previousVersion": "114.191.9"
}