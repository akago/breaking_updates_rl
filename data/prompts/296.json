{
    "relative_path": "openfire-hazelcast-plugin/src/java/org/jivesoftware/openfire/plugin/util/cache/ClusteredCacheFactory.java",
    "prompt": "Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation. \nYou are specialized in breaking dependency updates, in which the failure is caused by an external dependency. \nTo solve the failure you can only work on the client code.\n\nthe following client code fails: \n'''java\n/*\n * Copyright (C) 2007-2009 Jive Software. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.jivesoftware.openfire.plugin.util.cache;\n\nimport com.hazelcast.config.ClasspathXmlConfig;\nimport com.hazelcast.config.Config;\nimport com.hazelcast.config.MapConfig;\nimport com.hazelcast.config.MaxSizeConfig;\nimport com.hazelcast.config.MemberAttributeConfig;\nimport com.hazelcast.config.MemcacheProtocolConfig;\nimport com.hazelcast.config.NetworkConfig;\nimport com.hazelcast.config.RestApiConfig;\nimport com.hazelcast.core.Cluster;\nimport com.hazelcast.core.Hazelcast;\nimport com.hazelcast.core.HazelcastInstance;\nimport com.hazelcast.core.Member;\nimport org.jivesoftware.openfire.JMXManager;\nimport org.jivesoftware.openfire.XMPPServer;\nimport org.jivesoftware.openfire.cluster.ClusterEventListener;\nimport org.jivesoftware.openfire.cluster.ClusterManager;\nimport org.jivesoftware.openfire.cluster.ClusterNodeInfo;\nimport org.jivesoftware.openfire.cluster.NodeID;\nimport org.jivesoftware.openfire.container.Plugin;\nimport org.jivesoftware.openfire.container.PluginClassLoader;\nimport org.jivesoftware.openfire.plugin.HazelcastPlugin;\nimport org.jivesoftware.openfire.plugin.util.cluster.HazelcastClusterNodeInfo;\nimport org.jivesoftware.util.StringUtils;\nimport org.jivesoftware.util.SystemProperty;\nimport org.jivesoftware.util.cache.Cache;\nimport org.jivesoftware.util.cache.CacheFactory;\nimport org.jivesoftware.util.cache.CacheFactoryStrategy;\nimport org.jivesoftware.util.cache.CacheWrapper;\nimport org.jivesoftware.util.cache.ClusterTask;\nimport org.jivesoftware.util.cache.ExternalizableUtil;\nimport org.jivesoftware.util.cache.ExternalizableUtilStrategy;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.Serializable;\nimport java.nio.charset.StandardCharsets;\nimport java.text.MessageFormat;\nimport java.time.Duration;\nimport java.time.Instant;\nimport java.time.temporal.ChronoUnit;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.Callable;\nimport java.util.concurrent.Future;\nimport java.util.concurrent.Semaphore;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.TimeoutException;\nimport java.util.concurrent.locks.Condition;\nimport java.util.concurrent.locks.Lock;\n\n/**\n * CacheFactory implementation to use when using Hazelcast in cluster mode.\n *\n * @author Tom Evans\n * @author Gaston Dombiak\n */\npublic class ClusteredCacheFactory implements CacheFactoryStrategy {\n\n    private static final SystemProperty<String> HAZELCAST_EXECUTOR_SERVICE_NAME = SystemProperty.Builder.ofType(String.class)\n        .setKey(\"hazelcast.executor.service.name\")\n        .setDefaultValue(\"openfire::cluster::executor\")\n        .setDynamic(false)\n        .setPlugin(HazelcastPlugin.PLUGIN_NAME)\n        .build();\n    private static final SystemProperty<Duration> MAX_CLUSTER_EXECUTION_TIME = SystemProperty.Builder.ofType(Duration.class)\n        .setKey(\"hazelcast.max.execution.seconds\")\n        .setDefaultValue(Duration.ofSeconds(30))\n        .setChronoUnit(ChronoUnit.SECONDS)\n        .setDynamic(true)\n        .setPlugin(HazelcastPlugin.PLUGIN_NAME)\n        .build();\n    private static final SystemProperty<Duration> CLUSTER_STARTUP_RETRY_TIME = SystemProperty.Builder.ofType(Duration.class)\n        .setKey(\"hazelcast.startup.retry.seconds\")\n        .setDefaultValue(Duration.ofSeconds(10))\n        .setChronoUnit(ChronoUnit.SECONDS)\n        .setDynamic(true)\n        .setPlugin(HazelcastPlugin.PLUGIN_NAME)\n        .build();\n    private static final SystemProperty<Integer> CLUSTER_STARTUP_RETRY_COUNT = SystemProperty.Builder.ofType(Integer.class)\n        .setKey(\"hazelcast.startup.retry.count\")\n        .setDefaultValue(1)\n        .setDynamic(true)\n        .setPlugin(HazelcastPlugin.PLUGIN_NAME)\n        .build();\n    private static final SystemProperty<String> HAZELCAST_CONFIG_FILE = SystemProperty.Builder.ofType(String.class)\n        .setKey(\"hazelcast.config.xml.filename\")\n        .setDefaultValue(\"hazelcast-cache-config.xml\")\n        .setDynamic(false)\n        .setPlugin(HazelcastPlugin.PLUGIN_NAME)\n        .build();\n    private static final SystemProperty<Boolean> HAZELCAST_JMX_ENABLED = SystemProperty.Builder.ofType(Boolean.class)\n        .setKey(\"hazelcast.config.jmx.enabled\")\n        .setDefaultValue(Boolean.FALSE)\n        .setDynamic(false)\n        .setPlugin(HazelcastPlugin.PLUGIN_NAME)\n        .build();\n    private static final SystemProperty<Boolean> HAZELCAST_REST_ENABLED = SystemProperty.Builder.ofType(Boolean.class)\n        .setKey(\"hazelcast.config.rest.enabled\")\n        .setDefaultValue(Boolean.FALSE)\n        .setDynamic(false)\n        .setPlugin(HazelcastPlugin.PLUGIN_NAME)\n        .build();\n    private static final SystemProperty<Boolean> HAZELCAST_MEMCACHE_ENABLED = SystemProperty.Builder.ofType(Boolean.class)\n        .setKey(\"hazelcast.config.memcache.enabled\")\n        .setDefaultValue(Boolean.FALSE)\n        .setDynamic(false)\n        .setPlugin(HazelcastPlugin.PLUGIN_NAME)\n        .build();\n\n    private static final Logger logger = LoggerFactory.getLogger(ClusteredCacheFactory.class);\n    public static final String PLUGIN_NAME = \"hazelcast\";\n\n    /**\n     * Keep serialization strategy the server was using before we set our strategy. We will\n     * restore old strategy when plugin is unloaded.\n     */\n    private ExternalizableUtilStrategy serializationStrategy;\n\n    /**\n     * Storage for cache statistics\n     */\n    private static Map<String, Map<String, long[]>> cacheStats;\n\n    private static HazelcastInstance hazelcast = null;\n    private static Cluster cluster = null;\n    private ClusterListener clusterListener;\n    private String lifecycleListener;\n    private String membershipListener;\n\n    /**\n     * Keeps that running state. Initial state is stopped.\n     */\n    private State state = State.stopped;\n\n    /**\n     * Used to limit the amount of duplicate warnings logged.\n     */\n    private final Cache<String, Instant> pluginClassLoaderWarnings;\n\n    public ClusteredCacheFactory() {\n        pluginClassLoaderWarnings = CacheFactory.createLocalCache(\"PluginClassLoader Warnings for Clustered Tasks\");\n        pluginClassLoaderWarnings.setMaxLifetime(Duration.ofHours(1).toMillis()); // Minimum duration between logged warnings.\n    }\n\n    @Override\n    public boolean startCluster() {\n        logger.info(\"Starting hazelcast clustering\");\n        state = State.starting;\n\n        // Set the serialization strategy to use for transmitting objects between node clusters\n        serializationStrategy = ExternalizableUtil.getInstance().getStrategy();\n        ExternalizableUtil.getInstance().setStrategy(new ClusterExternalizableUtil());\n\n        // Store previous class loader (in case we change it)\n        final ClassLoader oldLoader = Thread.currentThread().getContextClassLoader();\n        final ClassLoader loader = new ClusterClassLoader();\n        Thread.currentThread().setContextClassLoader(loader);\n        int retry = 0;\n        do {\n            try {\n                final Config config = new ClasspathXmlConfig(HAZELCAST_CONFIG_FILE.getValue());\n                final NetworkConfig networkConfig = config.getNetworkConfig();\n                if (!HAZELCAST_MEMCACHE_ENABLED.getValue()) {\n                    networkConfig.setMemcacheProtocolConfig(new MemcacheProtocolConfig().setEnabled(false));\n                }\n                if (!HAZELCAST_REST_ENABLED.getValue()) {\n                    networkConfig.setRestApiConfig(new RestApiConfig().setEnabled(false));\n                }\n                final MemberAttributeConfig memberAttributeConfig = config.getMemberAttributeConfig();\n                memberAttributeConfig.setStringAttribute(HazelcastClusterNodeInfo.HOST_NAME_ATTRIBUTE, XMPPServer.getInstance().getServerInfo().getHostname());\n                memberAttributeConfig.setStringAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE, XMPPServer.getInstance().getNodeID().toString());\n                config.setInstanceName(\"openfire\");\n                config.setClassLoader(loader);\n                if (JMXManager.isEnabled() && HAZELCAST_JMX_ENABLED.getValue()) {\n                    config.setProperty(\"hazelcast.jmx\", \"true\");\n                    config.setProperty(\"hazelcast.jmx.detailed\", \"true\");\n                }\n                hazelcast = Hazelcast.newHazelcastInstance(config);\n                cluster = hazelcast.getCluster();\n                state = State.started;\n                // CacheFactory is now using clustered caches. We can add our listeners.\n                clusterListener = new ClusterListener(cluster);\n                clusterListener.joinCluster();\n                lifecycleListener = hazelcast.getLifecycleService().addLifecycleListener(clusterListener);\n                membershipListener = cluster.addMembershipListener(clusterListener);\n                logger.info(\"Hazelcast clustering started\");\n                break;\n            } catch (final Exception e) {\n                cluster = null;\n                if (retry < CLUSTER_STARTUP_RETRY_COUNT.getValue()) {\n                    logger.warn(\"Failed to start clustering (\" + e.getMessage() + \"); \" +\n                        \"will retry in \" + StringUtils.getFullElapsedTime(CLUSTER_STARTUP_RETRY_TIME.getValue()));\n                    try {\n                        Thread.sleep(CLUSTER_STARTUP_RETRY_TIME.getValue().toMillis());\n                    } catch (final InterruptedException ignored) {\n                        Thread.currentThread().interrupt();\n                    }\n                } else {\n                    logger.error(\"Unable to start clustering - continuing in local mode\", e);\n                    state = State.stopped;\n                }\n            }\n        } while (retry++ < CLUSTER_STARTUP_RETRY_COUNT.getValue() && !Thread.currentThread().isInterrupted());\n\n        if (oldLoader != null) {\n            // Restore previous class loader\n            Thread.currentThread().setContextClassLoader(oldLoader);\n        }\n        return cluster != null;\n    }\n\n    @Override\n    public void stopCluster() {\n        // Stop the cache services.\n        cacheStats = null;\n        // Update the running state of the cluster\n        state = State.stopped;\n\n        // Fire the leftClusterEvent before we leave the cluster - we need to access the clustered data before the\n        // cluster is shutdown so it can be copied in to the non-clustered, DefaultCache\n        fireLeftClusterAndWaitToComplete(Duration.ofSeconds(30));\n        // Stop the cluster\n        hazelcast.getLifecycleService().removeLifecycleListener(lifecycleListener);\n        cluster.removeMembershipListener(membershipListener);\n        Hazelcast.shutdownAll();\n        cluster = null;\n        lifecycleListener = null;\n        membershipListener = null;\n        clusterListener = null;\n\n        // Reset packet router to use to deliver packets to remote cluster nodes\n        XMPPServer.getInstance().getRoutingTable().setRemotePacketRouter(null);\n        // Reset the session locator to use\n        XMPPServer.getInstance().setRemoteSessionLocator(null);\n        // Set the old serialization strategy was using before clustering was loaded\n        ExternalizableUtil.getInstance().setStrategy(serializationStrategy);\n    }\n\n    @Override\n    public Cache createCache(final String name) {\n        // Check if cluster is being started up\n        while (state == State.starting) {\n            // Wait until cluster is fully started (or failed)\n            try {\n                Thread.sleep(250);\n            } catch (final InterruptedException e) {\n                // Ignore\n            }\n        }\n        if (state == State.stopped) {\n            throw new IllegalStateException(\"Cannot create clustered cache when not in a cluster\");\n        }\n        // Determine the time to live. Note that in Hazelcast 0 means \"forever\", not -1\n        final long openfireLifetimeInMilliseconds = CacheFactory.getMaxCacheLifetime(name);\n        final int hazelcastLifetimeInSeconds = openfireLifetimeInMilliseconds < 0 ? 0 : Math.max((int) (openfireLifetimeInMilliseconds / 1000), 1);\n        // Determine the max cache size. Note that in Hazelcast the max cache size must be positive and is in megabytes\n        final long openfireMaxCacheSizeInBytes = CacheFactory.getMaxCacheSize(name);\n        final int hazelcastMaxCacheSizeInMegaBytes = openfireMaxCacheSizeInBytes < 0 ? Integer.MAX_VALUE : Math.max((int) openfireMaxCacheSizeInBytes / 1024 / 1024, 1);\n        // It's only possible to create a dynamic config if a static one doesn't already exist\n        final MapConfig staticConfig = hazelcast.getConfig().getMapConfigOrNull(name);\n        if (staticConfig == null) {\n            final MapConfig dynamicConfig = new MapConfig(name);\n            dynamicConfig.setTimeToLiveSeconds(hazelcastLifetimeInSeconds);\n            dynamicConfig.setMaxSizeConfig(new MaxSizeConfig(hazelcastMaxCacheSizeInMegaBytes, MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE));\n            logger.debug(\"Creating dynamic map config for cache={}, dynamicConfig={}\", name, dynamicConfig);\n            hazelcast.getConfig().addMapConfig(dynamicConfig);\n        } else {\n            logger.debug(\"Static configuration already exists for cache={}, staticConfig={}\", name, staticConfig);\n        }\n        // TODO: Better genericize this method in CacheFactoryStrategy so we can stop suppressing this warning\n        @SuppressWarnings(\"unchecked\") final ClusteredCache clusteredCache = new ClusteredCache(name, hazelcast.getMap(name));\n        return clusteredCache;\n    }\n\n    @Override\n    public void destroyCache(Cache cache) {\n        if (cache instanceof CacheWrapper) {\n            cache = ((CacheWrapper) cache).getWrappedCache();\n        }\n\n        final ClusteredCache clustered = (ClusteredCache) cache;\n        clustered.destroy();\n    }\n\n    @Override\n    public boolean isSeniorClusterMember() {\n        if (clusterListener == null || !clusterListener.isClusterMember()) {\n            return false;\n        }\n        return clusterListener.isSeniorClusterMember();\n    }\n\n    @Override\n    public List<ClusterNodeInfo> getClusterNodesInfo() {\n        return clusterListener == null ? Collections.emptyList() : clusterListener.getClusterNodesInfo();\n    }\n\n    @Override\n    public int getMaxClusterNodes() {\n        // No longer depends on license code so just return a big number\n        return 10000;\n    }\n\n    @Override\n    public byte[] getSeniorClusterMemberID() {\n        if (cluster != null && !cluster.getMembers().isEmpty()) {\n            final Member oldest = cluster.getMembers().iterator().next();\n            return getNodeID(oldest).toByteArray();\n        } else {\n            return null;\n        }\n    }\n\n    @Override\n    public byte[] getClusterMemberID() {\n        if (cluster != null) {\n            return getNodeID(cluster.getLocalMember()).toByteArray();\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Gets the pseudo-synchronized time from the cluster. While the cluster members may\n     * have varying system times, this method is expected to return a timestamp that is\n     * synchronized (or nearly so; best effort) across the cluster.\n     *\n     * @return Synchronized time for all cluster members\n     */\n    @Override\n    public long getClusterTime() {\n        return cluster == null ? System.currentTimeMillis() : cluster.getClusterTime();\n    }\n\n    /*\n     * Execute the given task on the other (non-local) cluster members.\n     * Note that this method does not provide the result set for the given\n     * task, as the task is run asynchronously across the cluster.\n     */\n    @Override\n    public void doClusterTask(final ClusterTask<?> task) {\n\n        if (cluster == null) {\n            return;\n        }\n        final Set<Member> members = new HashSet<>();\n        final Member current = cluster.getLocalMember();\n        for (final Member member : cluster.getMembers()) {\n            if (!member.getUuid().equals(current.getUuid())) {\n                members.add(member);\n            }\n        }\n\n\n        if (!members.isEmpty()) {\n            // Asynchronously execute the task on the other cluster members\n            logger.debug(\"Executing asynchronous MultiTask: \" + task.getClass().getName());\n            checkForPluginClassLoader(task);\n            hazelcast.getExecutorService(HAZELCAST_EXECUTOR_SERVICE_NAME.getValue()).submitToMembers(new CallableTask<>(task), members);\n        } else {\n            logger.debug(\"No cluster members selected for cluster task \" + task.getClass().getName());\n        }\n    }\n\n    /*\n     * Execute the given task on the given cluster member.\n     * Note that this method does not provide the result set for the given\n     * task, as the task is run asynchronously across the cluster.\n     */\n    @Override\n    public void doClusterTask(final ClusterTask<?> task, final byte[] nodeID) {\n        if (cluster == null) {\n            return;\n        }\n        final Member member = getMember(nodeID);\n        // Check that the requested member was found\n        if (member != null) {\n            // Asynchronously execute the task on the target member\n            logger.debug(\"Executing asynchronous DistributedTask: \" + task.getClass().getName());\n            checkForPluginClassLoader(task);\n            hazelcast.getExecutorService(HAZELCAST_EXECUTOR_SERVICE_NAME.getValue()).submitToMember(new CallableTask<>(task), member);\n        } else {\n            final String msg = MessageFormat.format(\"Requested node {0} not found in cluster\", new String(nodeID, StandardCharsets.UTF_8));\n            logger.warn(msg);\n            throw new IllegalArgumentException(msg);\n        }\n    }\n\n    /*\n     * Execute the given task on the designated cluster members.\n     * Note that this method blocks for up to MAX_CLUSTER_EXECUTION_TIME\n     * (seconds) per member until the task is run on all members.\n     */\n    @Override\n    public <T> Collection<T> doSynchronousClusterTask(final ClusterTask<T> task, final boolean includeLocalMember) {\n        if (cluster == null) {\n            return Collections.emptyList();\n        }\n        final Set<Member> members = new HashSet<>();\n        final Member current = cluster.getLocalMember();\n        for (final Member member : cluster.getMembers()) {\n            if (includeLocalMember || (!member.getUuid().equals(current.getUuid()))) {\n                members.add(member);\n            }\n        }\n        final Collection<T> result = new ArrayList<>();\n        if (!members.isEmpty()) {\n            // Asynchronously execute the task on the other cluster members\n            try {\n                logger.debug(\"Executing MultiTask: \" + task.getClass().getName());\n                checkForPluginClassLoader(task);\n                final Map<Member, ? extends Future<T>> futures = hazelcast.getExecutorService(HAZELCAST_EXECUTOR_SERVICE_NAME.getValue()).submitToMembers(new CallableTask<>(task), members);\n                long nanosLeft = TimeUnit.SECONDS.toNanos(MAX_CLUSTER_EXECUTION_TIME.getValue().getSeconds() * members.size());\n                for (final Future<T> future : futures.values()) {\n                    final long start = System.nanoTime();\n                    result.add(future.get(nanosLeft, TimeUnit.NANOSECONDS));\n                    nanosLeft = nanosLeft - (System.nanoTime() - start);\n                }\n            } catch (final TimeoutException te) {\n                logger.error(\"Failed to execute cluster task within \" + StringUtils.getFullElapsedTime(MAX_CLUSTER_EXECUTION_TIME.getValue()), te);\n            } catch (final Exception e) {\n                logger.error(\"Failed to execute cluster task\", e);\n            }\n        } else {\n            logger.debug(\"No cluster members selected for cluster task \" + task.getClass().getName());\n        }\n        return result;\n    }\n\n    /*\n     * Execute the given task on the designated cluster member.\n     * Note that this method blocks for up to MAX_CLUSTER_EXECUTION_TIME\n     * (seconds) until the task is run on the given member.\n     */\n    @Override\n    public <T> T doSynchronousClusterTask(final ClusterTask<T> task, final byte[] nodeID) {\n        if (cluster == null) {\n            return null;\n        }\n        final Member member = getMember(nodeID);\n        T result = null;\n        // Check that the requested member was found\n        if (member != null) {\n            // Asynchronously execute the task on the target member\n            logger.debug(\"Executing DistributedTask: \" + task.getClass().getName());\n            checkForPluginClassLoader(task);\n            try {\n                final Future<T> future = hazelcast.getExecutorService(HAZELCAST_EXECUTOR_SERVICE_NAME.getValue()).submitToMember(new CallableTask<>(task), member);\n                result = future.get(MAX_CLUSTER_EXECUTION_TIME.getValue().getSeconds(), TimeUnit.SECONDS);\n                logger.trace(\"DistributedTask result: {}\", result);\n            } catch (final TimeoutException te) {\n                logger.error(\"Failed to execute cluster task within \" + MAX_CLUSTER_EXECUTION_TIME + \" seconds\", te);\n            } catch (final Exception e) {\n                logger.error(\"Failed to execute cluster task\", e);\n            }\n        } else {\n            final String msg = MessageFormat.format(\"Requested node {0} not found in cluster\", new String(nodeID, StandardCharsets.UTF_8));\n            logger.warn(msg);\n            throw new IllegalArgumentException(msg);\n        }\n        return result;\n    }\n\n    @Override\n    public ClusterNodeInfo getClusterNodeInfo(final byte[] nodeID) {\n        if (cluster == null) {\n            return null;\n        }\n        ClusterNodeInfo result = null;\n        final Member member = getMember(nodeID);\n        if (member != null) {\n            result = new HazelcastClusterNodeInfo(member, cluster.getClusterTime());\n        }\n        return result;\n    }\n\n    private Member getMember(final byte[] nodeID) {\n        final NodeID memberToFind = NodeID.getInstance(nodeID);\n        for (final Member member : cluster.getMembers()) {\n            if (memberToFind.equals(getNodeID(member))) {\n                return member;\n            }\n        }\n        return null;\n    }\n\n    @Override\n    public void updateCacheStats(final Map<String, Cache> caches) {\n        if (!caches.isEmpty() && cluster != null) {\n            // Create the cacheStats map if necessary.\n            if (cacheStats == null) {\n                cacheStats = hazelcast.getMap(\"opt-$cacheStats\");\n            }\n            final String uid = getNodeID(cluster.getLocalMember()).toString();\n            final Map<String, long[]> stats = new HashMap<>();\n            for (final String cacheName : caches.keySet()) {\n                final Cache cache = caches.get(cacheName);\n                // The following information is published:\n                // current size, max size, num elements, cache\n                // hits, cache misses.\n                final long[] info = new long[5];\n                info[0] = cache.getLongCacheSize();\n                info[1] = cache.getMaxCacheSize();\n                info[2] = cache.size();\n                info[3] = cache.getCacheHits();\n                info[4] = cache.getCacheMisses();\n                stats.put(cacheName, info);\n            }\n            // Publish message\n            cacheStats.put(uid, stats);\n        }\n    }\n\n    @Override\n    public String getPluginName() {\n        return PLUGIN_NAME;\n    }\n\n    @Override\n    public Lock getLock(final Object key, Cache cache) {\n        if (cache instanceof CacheWrapper) {\n            cache = ((CacheWrapper) cache).getWrappedCache();\n        }\n        // TODO: Update CacheFactoryStrategy so the signature is getLock(final Serializable key, Cache<Serializable, Serializable> cache)\n        @SuppressWarnings(\"unchecked\") final ClusterLock clusterLock = new ClusterLock((Serializable) key, (ClusteredCache<Serializable, ?>) cache);\n        return clusterLock;\n    }\n\n    /**\n     * ClusterTasks that are executed should not be provided by a plugin. These will cause issues related to class\n     * loading when the providing plugin is reloaded. This method verifies if an instance of a task is\n     * loaded by a plugin class loader, and logs a warning to the log files when it is. The amount of warnings logged is\n     * limited by a time interval.\n     *\n     * @param o the instance for which to verify the class loader\n     * @see <a href=\"https://github.com/igniterealtime/openfire-hazelcast-plugin/issues/74\">Issue #74: Warn against usage of plugin-provided classes in Hazelcast</a>\n     */\n    protected <T extends ClusterTask<?>> void checkForPluginClassLoader(final T o) {\n        if (o != null && o.getClass().getClassLoader() instanceof PluginClassLoader\n            && !pluginClassLoaderWarnings.containsKey(o.getClass().getName()) )\n        {\n            // Try to determine what plugin loaded the offending class.\n            String pluginName = null;\n            try {\n                final Collection<Plugin> plugins = XMPPServer.getInstance().getPluginManager().getPlugins();\n                for (final Plugin plugin : plugins) {\n                    final PluginClassLoader pluginClassloader = XMPPServer.getInstance().getPluginManager().getPluginClassloader(plugin);\n                    if (o.getClass().getClassLoader().equals(pluginClassloader)) {\n                        pluginName = XMPPServer.getInstance().getPluginManager().getCanonicalName(plugin);\n                        break;\n                    }\n                }\n            } catch (Exception e) {\n                logger.debug(\"An exception occurred while trying to determine the plugin class loader that loaded an instance of {}\", o.getClass(), e);\n            }\n            logger.warn(\"An instance of {} that is executed as a cluster task. This will cause issues when reloading \" +\n                    \"the plugin that provides this class. The plugin implementation should be modified.\",\n                pluginName != null ? o.getClass() + \" (provided by plugin \" + pluginName + \")\" : o.getClass());\n            pluginClassLoaderWarnings.put(o.getClass().getName(), Instant.now()); // Note that this Instant is unused.\n        }\n    }\n\n    private static class ClusterLock implements Lock {\n\n        private final Serializable key;\n        private final ClusteredCache<Serializable, ?> cache;\n\n        ClusterLock(final Serializable key, final ClusteredCache<Serializable, ?> cache) {\n            this.key = key;\n            this.cache = cache;\n        }\n\n        @Override\n        public void lock() {\n            cache.lock(key, -1);\n        }\n\n        @Override\n        public void lockInterruptibly() {\n            cache.lock(key, -1);\n        }\n\n        @Override\n        public boolean tryLock() {\n            return cache.lock(key, 0);\n        }\n\n        @Override\n        public boolean tryLock(final long time, final TimeUnit unit) {\n            return cache.lock(key, unit.toMillis(time));\n        }\n\n        @Override\n        public void unlock() {\n            cache.unlock(key);\n        }\n\n        @Override\n        public Condition newCondition() {\n            throw new UnsupportedOperationException();\n        }\n    }\n\n    private static class CallableTask<V> implements Callable<V>, Serializable {\n        private static final long serialVersionUID = -8761271979427214681L;\n        private final ClusterTask<V> task;\n\n        CallableTask(final ClusterTask<V> task) {\n            this.task = task;\n        }\n\n        @Override\n        public V call() {\n            try {\n                task.run();\n                logger.trace(\"CallableTask[{}] result: {}\", task.getClass().getName(), task.getResult());\n                return task.getResult();\n            } catch (final Exception e) {\n                logger.error(\"Unexpected exception running CallableTask[{}]\", task.getClass().getName(), e);\n                throw e;\n            }\n        }\n    }\n\n    private enum State {\n        stopped,\n        starting,\n        started\n    }\n\n    public static NodeID getNodeID(final Member member) {\n        return NodeID.getInstance(member.getStringAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE).getBytes(StandardCharsets.UTF_8));\n    }\n\n    static void fireLeftClusterAndWaitToComplete(final Duration timeout) {\n        final Semaphore leftClusterSemaphore = new Semaphore(0);\n        final ClusterEventListener clusterEventListener = new ClusterEventListener() {\n            @Override\n            public void joinedCluster() {\n            }\n\n            @Override\n            public void joinedCluster(final byte[] bytes) {\n            }\n\n            @Override\n            public void leftCluster() {\n                leftClusterSemaphore.release();\n            }\n\n            @Override\n            public void leftCluster(final byte[] bytes) {\n            }\n\n            @Override\n            public void markedAsSeniorClusterMember() {\n            }\n        };\n        try {\n            // Add a listener at the ultimate end of the list of all listeners, to detect that left-cluster event handling\n            // has been invoked for all before proceeding.\n            ClusterManager.addListener(clusterEventListener, Integer.MAX_VALUE);\n            logger.debug(\"Firing leftCluster() event\");\n            ClusterManager.fireLeftCluster();\n            logger.debug(\"Waiting for leftCluster() event to be called [timeout={}]\", StringUtils.getFullElapsedTime(timeout));\n            if (!leftClusterSemaphore.tryAcquire(timeout.toMillis(), TimeUnit.MILLISECONDS)) {\n                logger.warn(\"Timeout waiting for leftCluster() event to be called [timeout={}]\", StringUtils.getFullElapsedTime(timeout));\n            }\n        } catch (final Exception e) {\n            logger.error(\"Unexpected exception waiting for clustering to shut down\", e);\n        } finally {\n            ClusterManager.removeListener(clusterEventListener);\n        }\n    }\n\n}\n\n\n\n\n'''\nthe error is triggered in the following specific lines in the previous code:\n\nwith the following error message:\n[ERROR] /openfire-hazelcast-plugin/src/java/org/jivesoftware/openfire/plugin/util/cache/ClusteredCacheFactory.java:[22,28] cannot find symbol  symbol:   class MaxSizeConfig\n  location: package com.hazelcast.config\n[ERROR] /openfire-hazelcast-plugin/src/java/org/jivesoftware/openfire/plugin/util/cache/ClusteredCacheFactory.java:[27,26] cannot find symbol  symbol:   class Cluster\n  location: package com.hazelcast.core\n[ERROR] /openfire-hazelcast-plugin/src/java/org/jivesoftware/openfire/plugin/util/cache/ClusteredCacheFactory.java:[30,26] cannot find symbol  symbol:   class Member\n  location: package com.hazelcast.core\n[ERROR] /openfire-hazelcast-plugin/src/java/org/jivesoftware/openfire/plugin/util/cache/ClusteredCacheFactory.java:[149,20] cannot find symbol  symbol:   class Cluster\n  location: class org.jivesoftware.openfire.plugin.util.cache.ClusteredCacheFactory\n[ERROR] /openfire-hazelcast-plugin/src/java/org/jivesoftware/openfire/plugin/util/cache/ClusteredCacheFactory.java:[501,13] cannot find symbol  symbol:   class Member\n  location: class org.jivesoftware.openfire.plugin.util.cache.ClusteredCacheFactory\n[ERROR] /openfire-hazelcast-plugin/src/java/org/jivesoftware/openfire/plugin/util/cache/ClusteredCacheFactory.java:[655,42] cannot find symbol  symbol:   class Member\n  location: class org.jivesoftware.openfire.plugin.util.cache.ClusteredCacheFactory\nThe error is caused by a change in the API of the dependency. The new library version includes the following changes:\nFormat: element | nature | kind\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapAddEntryListenerToKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.impl.BaseIndexStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.collection.impl.collection.CollectionItem.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.operations.CompareAndRemoveOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.cache.impl.record.CacheRecordHashMap.put | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferTailSequenceMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.PartitionReplica.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.CPGroupInfo.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.AddPartitionLostListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.ReplicateUpdateToCallerOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raftop.metadata.CompleteRaftGroupMembershipChangesOp.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.map.impl.eviction.EvictorImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.client.GetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.TransactionalMapProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueContainsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapPutTransientCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueClearCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.RollbackAllowedDuringPassiveStateTxBackupLogOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.PutIfAbsentOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListRemoveListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapRemoveIfSameCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.executor.impl.operations.MemberCallableTaskOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetRemoveListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapLoadGivenKeysCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceIsShutdownMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.CollectionContainer.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.collection.impl.collection.operations.CollectionRemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.operations.RemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.session.client.CloseSessionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueuePeekMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.record.ReplicatedEntryEventFilter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DurableExecutorRetrieveResultCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapForceUnlockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheAddPartitionLostListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.CommitClusterStateOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapSubmitToKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferRemainingCapacityMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapDeleteMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.reliable.ReliableTopicMessage.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapSetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.InstanceMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.impl.QueryableEntriesSegment.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.RemoveBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.ClusterService.getMembers | DELETION | METHOD_REMOVED\ncom.hazelcast.executor.impl.operations.CallableTaskOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.spi.blocking.operation.ExpireWaitKeysOp.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.cardinality.CardinalityEstimatorAddMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapRemovePartitionLostListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddListConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.ringbuffer.impl.RingbufferWaitNotifyKey.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.journal.InternalEventJournalCacheEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheRemovePartitionLostListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalset.TransactionalSetRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.usercodedeployment.impl.operation.DeployClassesOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferAddAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.PurgeAllowedDuringPassiveStateTxBackupLogOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapReplaceIfSameCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapEvictAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapTryLockCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.journal.DeserializingEventJournalMapEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.eviction.MapClearExpiredRecordsTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raftop.metadata.CreateRaftNodeOp.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.topic.impl.DataAwareMessage.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListClearMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheRemoveAllOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.cp.internal.datastructures.spi.client.CreateRaftGroupMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheRemoveAllKeysCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListIsEmptyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapSubmitToKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.event.LocalEntryEventData.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.merge.SplitBrainMergePolicyProvider.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.ringbuffer.impl.operations.AddAllOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetAllScheduledFuturesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnRemoveAllOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapProjectWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.journal.InternalEventJournalMapEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapLoadGivenKeysMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.reliable.ReliableTopicService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetCompareAndRetainAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueDrainToMaxSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalListSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.session.operation.CreateSessionOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.iterator.MapEntriesWithCursor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.QueryResultProcessor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.TransactionCommitMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.ReplicatedMapEvictionProcessor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListIndexOfCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.QueueContainer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.fd.DeadlineClusterFailureDetector.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheEventJournalReadTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.semaphore.AcquireInvocationKey.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.TopicProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListLastIndexOfMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.PutOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.exception.PartitionMigratingException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.journal.CacheEventJournalReadOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheRemoveInvalidationListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CachePutAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.internal.cluster.impl.operations.HeartbeatOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.XATransactionPrepareMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueRemainingCapacityCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.ascii.rest.HttpPostCommand.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomiclong.client.AlterMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.RemovePartitionLostListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CPSessionHeartbeatSessionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheSetExpiryPolicyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddCardinalityEstimatorConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractInvocationMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapAddIndexCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.RemoveFromLoadAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.ringbuffer.impl.operations.AddOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapClearMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnReservePollBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapTryLockCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheEventJournalReadCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueAddAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.DefaultRecordStore.get | DELETION | METHOD_REMOVED\ncom.hazelcast.config.MerkleTreeConfig.equals | MUTATION | METHOD_NOW_FINAL\ncom.hazelcast.client.impl.protocol.task.list.ListRemoveWithIndexMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.AbstractNamedContainerCollector.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.DeployClassesMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListContainsAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddPartitionLostListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.operation.FinalizeMigrationOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapExecuteWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.invalidation.Invalidation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapEventJournalSubscribeTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.countdownlatch.AwaitInvocationKey.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.operation.ApplyOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.CacheEventListenerAdaptor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CountDownLatchTrySetCountCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.record.ReplicatedQueryEventFilter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.AbstractCacheRecordStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorShutdownCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.PutOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.list.operations.ListIndexOfOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferReadOneMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.ManagementCenterConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.events.WanFullSyncFinishedEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheClearMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.XATransactionContextImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.equals | MUTATION | METHOD_NOW_FINAL\ncom.hazelcast.cp.internal.datastructures.countdownlatch.client.AwaitMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.TxnPrepareOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetIsEmptyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.XATransactionCommitMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.QueueContainer.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferTailSequenceCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapPutAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.AggregationResult.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueOfferCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.AbstractJoiner.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddExecutorConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListAddListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.eviction.EvictionChecker.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.CallerRunsAccumulationExecutor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetContainsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListCompareAndRemoveAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.client.SetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.PutFromLoadAllBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheFetchNearCacheInvalidationMetadataCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetResultFromPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueDrainMaxSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheIterateEntriesMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.EntryBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionReserveAddOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.WanEventHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapRemoveInterceptorMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.CollectRemoteTransactionsOperationSupplier.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.cache.impl.operation.KeyBasedCacheOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.util.futures.ChainingFuture.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.topic.TopicRemoveMessageListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.DefaultMapQueryMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddFlakeIdGeneratorConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapRemoveEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MapFetchWithQueryOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.TransactionalQueueProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.proxyservice.impl.DistributedObjectEventPacket.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheGetAndReplaceMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TransactionalMultiMapProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapSetTtlMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.operations.PutRemoteTransactionBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.CacheRecordStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapIsLockedCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.list.ListService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CachePutIfAbsentMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MultipleEntryBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapLockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheLoadAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceCancelOnAddressMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapClearCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.Query.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapGetAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.AggregationResultProcessor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.list.ListProxyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddNearCacheListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.RemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddEntryListenerWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddEntryListenerToKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListListIteratorCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheRemoveAllBackupOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.ClientMessage.equals | MUTATION | METHOD_NOW_FINAL\ncom.hazelcast.client.impl.protocol.codec.AtomicLongAddAndGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalQueueOfferCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetAddAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.semaphore.client.DrainPermitsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapClearCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.QueueIterator.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheAddNearCacheInvalidationListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.CacheMergingEntryImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.AbstractSplitBrainHandlerService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.JoinRequest.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPutTransientMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.dto.InstallSnapshot.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.ReplicationOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.MultiMapReplicationOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MultiMapGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.AbstractEvictableRecordStore.get | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddEntryListenerWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheManagementConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.AbstractMergingEntryImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.CacheEventDataImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferAddMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.operations.AddAllBackupOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.DurableExecutorIsShutdownCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.util.Memoizer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.AbstractCacheRecordStore.put | DELETION | METHOD_REMOVED\ncom.hazelcast.cache.impl.operation.CacheEntryProcessorOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheGetAndRemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapRemovePartitionLostListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferHeadSequenceMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.fd.ClusterFailureDetector.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.multimap.impl.operations.DeleteOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAggregateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.impl.InternalPartitionImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapLockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListIteratorMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.RemoveBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.WanPublisherMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapValueCountMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueIteratorCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.PutBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CPSessionGenerateThreadIdCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.eviction.CacheClearExpiredRecordsTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.nearcache.MemberMinimalPartitionService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.TotalOrderedTopicProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalListAddCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddScheduledExecutorConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.finalize | DELETION | METHOD_REMOVED\ncom.hazelcast.map.impl.operation.DeleteOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.suppliers.LocalQueueStatsSupplier.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MapSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.AbstractMergingValueImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.ListMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CachePutIfAbsentOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MapFetchEntriesOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddCacheConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SemaphoreReleaseCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.notify | DELETION | METHOD_REMOVED\ncom.hazelcast.map.impl.wan.WanMapEntryView.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionallist.TransactionalListSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheReplaceCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MapTryRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.suppliers.LocalMapStatsSupplier.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.AddIndexBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.QueueItem.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MapReplicationStateHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorSubmitToPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.MultiMapService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapKeySetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMultiMapRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalQueuePollCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapDeleteMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.operationservice.impl.RaftInvocation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.record.CacheRecordFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapPutCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.toString | DELETION | METHOD_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnOfferBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddInterceptorMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.MemberSelector | DELETION | TYPE_REMOVED\ncom.hazelcast.map.impl.operation.SetTtlOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.dto.ManagedExecutorDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListIndexOfMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.MembersUpdateOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListGetAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.AbstractReplicatedMapAddEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.exception.StaleAppendRequestException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapIsLockedMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.FlakeIdGeneratorNewIdBatchCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapAddEntryListenerToKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.DeployClassesMessageTask.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.cp.internal.datastructures.semaphore.client.AvailablePermitsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheRemoveAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetClearMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.session.operation.ExpireSessionsOp.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.cp.internal.raft.impl.log.SnapshotEntry.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.internal.ascii.rest.HttpCommandProcessor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.store.NearCacheDataRecordStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskIsDoneFromPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapAggregateWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.topic.TopicAddMessageListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.semaphore.client.ChangePermitsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.XATransactionCreateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.WriteBehindStateHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetClearCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MultipleEntryOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorDisposeFromPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.operations.FinalizeRemoteTransactionOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheMergeOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.multimap.impl.operations.AbstractBackupAwareMultiMapOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.EvictionConfigHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapContainsKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.MultiMapMergingEntryImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.dynamicconfig.AddDynamicConfigOperationSupplier.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.collection.impl.set.SetService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MultipleEntryWithPredicateOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.queue.QueueOfferMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.ringbuffer.impl.operations.AddBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapEntriesWithPagingPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapEntriesWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceCancelOnPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MapGetAllOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.cp.internal.raft.impl.task.MembershipChangeTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.TopicMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.command.UpdateRaftGroupMembersCmd.getMembers | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.map.impl.operation.LoadAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapValuesWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.flakeidgen.impl.client.NewIdBatchMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.subscriber.QueryCacheRecordHashMap.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapDeleteCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.SemaphoreMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.LazyMapEntry.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.CreateProxyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.iterator.AbstractMapPartitionIterator.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetStatisticsFromPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.record.RecordMigrationInfo.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.diagnostics.EventQueuePlugin.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.countdownlatch.client.GetRoundMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.RollbackTxBackupLogOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.ParallelAccumulationExecutor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapUnlockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.operations.CollectionAddBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapReplaceCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ExecutorServiceSubmitToPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientGetDistributedObjectsCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.ItemListenerConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.PurgeTxBackupLogOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.common.DataAwareItemEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.scheduledexecutor.impl.InvokeOnMembers.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapKeySetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapTryLockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.EvictOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.operation.UpdateMapConfigOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.reliable.MessageRunner.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapRemoveEntryMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.serialization.impl.JavaDefaultSerializers$ExternalizableSerializer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.AtomicReferenceMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.subscriber.record.ObjectQueryCacheRecordFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.SplitBrainMulticastListener.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.invalidation.Invalidator.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.topic.TopicPublishMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapPutWithMaxIdleCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddReplicatedMapConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.mapstore.writebehind.WriteBehindStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapAddNearCacheInvalidationListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.MembershipListener | DELETION | TYPE_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetCompareAndRemoveAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.RaftService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPublisherCreateWithValueMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListIsEmptyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.XAResourceImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapSetWithMaxIdleMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListCompareAndRetainAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMultiMapRemoveEntryCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapEvictAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.nearcache.invalidation.MemberMapInvalidationMetaDataFetcher.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.XATransactionRollbackCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.record.DataRecordFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferReadManyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapRemoveIfSameMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.ResultSegment.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.adapter.IMapDataStructureAdapter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheAddPartitionLostListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheNearCacheStateHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheReplaceOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.PutBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapContainsKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ContinuousQueryPublisherCreateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.publisher.DefaultPublisherContext.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnRollbackOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapContainsValueCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.XATransactionFinalizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.BasePutOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.MembershipManager.getMembers | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferReadManyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorShutdownMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.ReplicateUpdateOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.TxnUnlockOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AuthenticationMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.StorageSCHM.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapEntrySetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.operationservice.impl.operations.Backup.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CountDownLatchGetCountCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.diagnostics.SystemLogPlugin.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.operation.ChangeWanStateOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferHeadSequenceCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.usercodedeployment.impl.ClassSource.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.lock.LockInvocationKey.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.CachePartitionEventData.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.multimap.impl.MultiMapMergeContainer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapContainsValueMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapGetAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheSetExpiryPolicyBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomiclong.client.ApplyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddCacheConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ExecutorServiceIsShutdownCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.operations.CollectionAddAllBackupOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.internal.cluster.impl.MembershipManager.getMember | DELETION | METHOD_REMOVED\ncom.hazelcast.collection.impl.collection.CollectionContainer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MapNearCacheStateHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.CountOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.FetchMembersViewOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.eventservice.impl.Registration.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.publisher.QueryCacheListenerRegistry.remove | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.TopicPublishCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapAddEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.YamlConfigBuilder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.EvictBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.impl.InternalPartitionServiceImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapKeySetWithPagingPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.serialization.impl.DataInputNavigableJsonAdapter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.AtomicReferenceMergingValueImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapDeleteCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.NodeEngineImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.ParallelPartitionScanExecutor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheContainsKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnset.TransactionalSetProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapValuesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.EventLostEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AbstractAddConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.sequence.CallIdSequenceWithBackpressure.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapExecuteOnAllKeysCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.operations.ContainsOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.map.impl.operation.PutAllBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.XATransactionCollectTransactionsCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CachePutIfAbsentCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueTakeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.diagnostics.HealthMonitor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.TxCollectionItem.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.AbstractCollectionProxyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.mapstore.writethrough.WriteThroughStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.util.ClientMessageDecoder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.scheduledexecutor.impl.ScheduledExecutorMemberBin.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListLastIndexOfCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.AbstractMapAddEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.PacketDispatcher.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.MapEntries.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.internal.nearcache.impl.invalidation.Invalidation.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.cache.impl.operation.CacheLoadAllOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.multimap.AbstractMultiMapAddEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheGetAllOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.transaction.impl.xa.operations.ClearRemoteTransactionOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.QueueStoreConfigHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.networking.nio.NioThread.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.MultiMapEventFilter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapKeySetWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.AddInterceptorOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.proxy.NearCachedMapProxyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapPutCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.operations.CollectionContainsOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MapContainsValueCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheGetAndRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapFetchWithQueryCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheGetAndReplaceCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ContinuousQueryDestroyCacheCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.lock.client.LockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.sequence.FailFastCallIdSequence.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.GetOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientPingCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ContinuousQueryAddListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueRemoveListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetGetAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.invalidation.RepairingHandler.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddReplicatedMapConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.ScheduledExecutorMergingEntryImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.ReplicateAllowedDuringPassiveStateTxBackupLogOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueCompareAndRemoveAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddMapConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapRemoveIfSameCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.EvictionOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.list.ListSubMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ExecutorServiceCancelOnPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ContinuousQuerySetReadCursorCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.session.client.HeartbeatSessionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.DefaultMapAggregateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapEntriesWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.dynamicconfig.ClusterWideConfigurationService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.RemoveDistributedObjectListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CardinalityEstimatorAddCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.RollbackClusterStateOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.mapstore.AbstractMapDataStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomiclong.client.CompareAndSetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.QueryEventFilter.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.equals | DELETION | METHOD_REMOVED\ncom.hazelcast.internal.management.events.WanSyncProgressUpdateEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.PartitionWideEntryBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.StorageImpl.get | DELETION | METHOD_REMOVED\njava.lang.Object.hashCode | MUTATION | METHOD_NOW_FINAL\ncom.hazelcast.client.impl.protocol.codec.CacheClearCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueuePollMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.subscriber.QueryCacheRecordStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.topic.impl.TopicProxySupport.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.invalidation.BatchInvalidator.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorSubmitToPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.LockAwareOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.event.MapPartitionEventData.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.journal.RingbufferMapEventJournalImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheCreateConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.dto.OperationServiceDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.XATransactionDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.clone | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractMultiTargetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.exception.CallerNotMemberException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.XATransactionCreateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.iterator.MapKeysWithCursor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CountDownLatchAwaitCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapAddPartitionLostListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapReplaceIfSameCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.MembersViewMetadata.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CPGroupCreateCPGroupCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.crdt.pncounter.PNCounterGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.operationservice.impl.OutboundOperationHandler.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMultiMapValueCountCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalSetRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.GetAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.multimap.impl.ObjectMultiMapProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.set.SetContainer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorSubmitToPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.operations.PutRemoteTransactionOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheEventJournalSubscribeTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapProjectionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.PutOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapExecuteOnKeysMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalSetSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.wait | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.command.UpdateRaftGroupMembersCmd.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.task.map.MapLoadAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheGetConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.operations.CollectionAddOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheRemoveEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.ClusterServiceImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueAddListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CachePutOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheRemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.DefaultNearCache.put | DELETION | METHOD_REMOVED\ncom.hazelcast.core.Cluster.getMembers | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapContainsKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.NodeMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorDisposeResultMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.CPSubsystemImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.AbstractInvocationFuture.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapContainsEntryCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheGetAndReplaceOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AuthenticationCustomCredentialsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.ReplicateTxBackupLogOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheGetAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferCapacityCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.exception.MemberDoesNotExistException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapRemoveEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.proxyservice.impl.DistributedObjectFuture.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientRemovePartitionLostListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.GetEntryViewOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.event.AbstractICacheEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.ManagedExecutorServiceMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapRemoveEntryMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.AtomicLongGetAndSetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.operation.PartitionReplicaSyncRetryResponse.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.AtomicLongApplyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorIsCancelledFromPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheFetchNearCacheInvalidationMetadataTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapSetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.JoinMessage.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.eventservice.impl.operations.DeregistrationOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.AbstractMapPutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientAuthenticationCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.RingbufferStoreConfigHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.ReplicatedMapService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnPrepareBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheListenerRegistrationMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapRemoveEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.journal.RingbufferCacheEventJournalImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapAddEntryListenerWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheGetAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.MergeOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.query.impl.QueryContext.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.MapKeyLoader.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractAllPartitionsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.subscriber.record.DataQueryCacheRecordFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.ContainsEntryOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.AbstractCacheMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddEntryListenerToKeyWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapExecuteOnKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.MapTransactionLogRecord.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.QueryResultRow.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.AtomicLongAlterCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.MasterResponseOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapReplaceMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.suppliers.LocalQueueStatsSupplier.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueuePollCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.PartitionWideEntryWithPredicateBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.NodeMulticastListener.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.AbstractTransactionalCollectionProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnCommitBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddListConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueCompareAndRemoveAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.executor.impl.ExecutorServiceProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapClearCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.AtomicLongMergingValueImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapContainsEntryMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.operation.ContainsOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.MultiMapMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListRemoveWithIndexCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.MutatingCacheOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.record.ReplicatedMapEntryView.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.preloader.NearCachePreloader.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.MultiMapTransactionLogRecord.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapValuesWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.semaphore.client.AcquirePermitsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.MembershipAdapter | DELETION | TYPE_REMOVED\ncom.hazelcast.internal.eviction.impl.evaluator.EvictionPolicyEvaluator.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.QueueMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ContinuousQueryMadePublishableCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.TimedMemberStateFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnPutBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheContainsKeyOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.event.EntryEventData.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.UnmodifiableLazyList.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.NoSuchMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapEntrySetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.ClientEndpointImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapValuesWithPagingPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapEntriesWithPagingPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListAddCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.MulticastJoiner.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheIterateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapKeySetWithPagingPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapFetchKeysMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.NearCache.put | DELETION | METHOD_REMOVED\ncom.hazelcast.map.impl.operation.MultipleEntryOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.spi.impl.merge.AbstractCollectionMergingValueImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListAddAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheLoadAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.AbstractDistributedObject.equals | MUTATION | METHOD_NOW_FINAL\ncom.hazelcast.durableexecutor.impl.operations.TaskBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.SetMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.DefaultRecordStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapExecuteOnKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddMultiMapConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.dto.VoteResponse.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.QueueEvictionProcessor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.mapstore.writebehind.WriteBehindStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetContainsAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapAddEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.ContainsKeyOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapFetchNearCacheInvalidationMetadataCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceShutdownMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.PingMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ContinuousQueryPublisherCreateWithValueCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.impl.AbstractIndex.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.spi.blocking.AbstractBlockingService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.ItemEvent.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MapFetchKeysCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionTxnAddBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SemaphoreAcquireCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.MergeClustersOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.RecordStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.cache.impl.record.CacheRecordHashMap.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheIterateEntriesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapLoadAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.TxnPrepareBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheGetAndRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.command.UpdateRaftGroupMembersCmd.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.ClientMessage.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheRemovePartitionLostListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.ReadonlyKeyBasedMapOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.suppliers.LocalMultiMapStatsSupplier.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.RemoveIfSameOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MultipleEntryWithPredicateBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.ClusterStateTransactionLogRecord.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.operations.OfferBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddEntryListenerToKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionCommitBackupOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.map.impl.tx.TxnLockAndGetOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.NearCacheRecordStore.put | DELETION | METHOD_REMOVED\ncom.hazelcast.spi.impl.merge.AbstractMergeRunnable.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapIsEmptyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.QueueMergingValueImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.MemberLeftException.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.collection.impl.collection.CollectionService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.reliable.MessageRunner.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.spi.impl.operationexecutor.impl.OperationThread.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.DefaultNearCache.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.AllowedDuringPassiveStateTransactionImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.AbstractContainerMerger.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.list.operations.ListSetBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.serialization.impl.JavaDefaultSerializers$JavaSerializer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.MemberInfo.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.TxnUnlockBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.DefaultMessageTaskFactoryProvider.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientDeployClassesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.operations.OfferOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddPNCounterConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.DistributedObjectEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.journal.DeserializingEventJournalCacheEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddDurableExecutorConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListAddAllWithIndexCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.mapstore.MapDataStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.ringbuffer.impl.ReadResultSetImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddMapConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.eviction.ClearExpiredRecordsTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapKeySetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapReplaceMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.EventListenerFilter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.PartitionPredicate.equals | DELETION | METHOD_REMOVED\ncom.hazelcast.config.XmlConfigBuilder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CachePutAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapRemoveEntryCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListAddAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapKeySetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueTakeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapPutCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.exception.CPSubsystemException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalSetAddCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MapOperationProviders.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapContainsValueCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.task.LeaderElectionTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMultiMapSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.TxQueueItem.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TopicRemoveMessageListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskCancelFromPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapValuesWithPagingPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapForceUnlockCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.dto.AppendRequest.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.CPMemberInfo.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheManagementConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheRemoveEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionPrepareOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueContainsAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.CreateProxiesMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapPutIfAbsentWithMaxIdleCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.OnJoinOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueRemainingCapacityMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListClearCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.CreateProxiesMessageTask.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.cache.impl.record.CacheDataRecord.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueAddListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.ContainsValueOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.task.QueryTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapValuesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.impl.PartitionStateManager.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapEventJournalSubscribeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.CreateTxBackupLogOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorIsShutdownMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.serialization.impl.bufferpool.BufferPoolThreadLocal.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.MaxSizeConfig | DELETION | TYPE_REMOVED\ncom.hazelcast.cache.impl.operation.CacheRemoveBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceSubmitToAddressMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.CachePartitionEventData.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.subscriber.NodeQueryCacheEventService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapDeleteCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetAddListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.event.BatchIMapEvent.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MapPutTransientWithMaxIdleCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.ringbuffer.impl.operations.AddAllBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.merge.entry.LazyCacheEntryView.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.PNCounterGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapFlushCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapIsEmptyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raftop.metadata.CreateRaftGroupOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.ringbuffer.impl.operations.MergeOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddTopicConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapValuesWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.dto.PartitionServiceBeanDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnGenerateRecordIdOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.events.WanConsistencyCheckStartedEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnlist.TransactionalListProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddReliableTopicConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.LockAwareLazyMapEntry.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapExecuteOnKeysCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalQueuePeekCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.eviction.EvictionPolicyComparator.equals | MUTATION | METHOD_NOW_FINAL\ncom.hazelcast.spi.impl.SerializableList.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.internal.nearcache.impl.store.AbstractNearCacheRecordStore.put | DELETION | METHOD_REMOVED\ncom.hazelcast.map.impl.operation.MapLoadAllOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.transactionallist.TransactionalListAddMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.MemberAttributeEvent | DELETION | TYPE_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListContainsAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnRemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapPutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.dto.AdvancedNetworkStatsDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapUnlockCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cardinality.impl.operations.MergeOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnPutOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddIndexMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.XATransactionCommitCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddMultiMapConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapTryLockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.UnmodifiableLazyList.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddSetConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapValuesMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapContainsKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddReliableTopicConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetRemoveListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.CompositeMessageTaskFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CardinalityEstimatorEstimateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapValuesMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.flakeidgen.impl.FlakeIdGeneratorService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.list.operations.ListAddOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.sequence.AbstractCallIdSequence.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapTryPutCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.suppliers.LocalMapStatsSupplier.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.internal.serialization.impl.MorphingPortableReader.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddFlakeIdGeneratorConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapKeySetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.TxnDeleteOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetCompareAndRetainAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.PNCounterAddCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.eviction.ExpiredKey.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.MapRecordKey.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListSetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.operations.OperationFactoryWrapper.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.ClientEndpointManagerImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapProjectCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.eviction.ExpirationManager.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapAddNearCacheEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.Cluster.addMembershipListener | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractCallableMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.CredentialsFactoryConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.AbstractMapQueryMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnPrepareOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.operation.ChangeRaftGroupMembershipOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.ListenerConfigHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.countdownlatch.client.CountDownMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CachePutCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CachePutAllBackupOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.map.impl.query.QueryResult.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapSetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddExecutorConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.usercodedeployment.impl.ClassLocator.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueueOfferMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapSetWithMaxIdleCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapTryPutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.RecordStore.get | DELETION | METHOD_REMOVED\ncom.hazelcast.ringbuffer.impl.RingbufferContainer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.util.concurrent.MPSCQueue.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapGetForUpdateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetStatsFromPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.TransactionCreateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapFetchEntriesMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueClearMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueueSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapPutIfAbsentCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPutTransientWithMaxIdleMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MapFetchKeysOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.LatencyTrackingMapLoader.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapFlushMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapKeySetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AddDistributedObjectListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.scheduledexecutor.impl.operations.MergeOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MapFetchEntriesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ExecutorServiceShutdownCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.ascii.TextCommandServiceImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapPutAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapExecuteOnAllKeysMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.LatencyTrackingMapStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.IMap | DELETION | TYPE_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnPrepareBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.ReplicatedMapCantBeCreatedOnLiteMemberException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddQueueConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.LockClusterStateOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheAddNearCacheInvalidationListenerTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.AbstractIMapEvent.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.spi.impl.CountingMigrationAwareService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.MultiMapProxySupport.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.DeleteBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.operation.PartitionReplicaSyncResponse.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.SplitBrainJoinMessage.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.CollectionMergingValueImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueRemoveListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.eviction.EvictionPolicyComparator.equals | MUTATION | METHOD_NOW_ABSTRACT\ncom.hazelcast.map.impl.operation.MapReplicationOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.collection.impl.queue.operations.QueueMergeOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.multimap.impl.MultiMapEventsPublisher.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.XATransaction.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractRemoveListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.monitor.LocalMapStats | DELETION | TYPE_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.operations.AddAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.CPGroupDestroyCPObjectCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.Member | DELETION | TYPE_REMOVED\ncom.hazelcast.map.impl.operation.PutTransientOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListRemoveListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddDurableExecutorConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.events.WanMerkleSyncFinishedEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.eventservice.impl.operations.DeregistrationOperationSupplier.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.ClientEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.invalidation.RepairingTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheIterateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueuePeekCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.merge.entry.DefaultCacheEntryView.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapRemoveAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.CreateAllowedDuringPassiveStateTxBackupLogOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.SetTtlBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapFetchWithQueryMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapRemoveAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.reliable.ReliableMessageListenerAdapter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapContainsKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueDrainToCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.record.NearCacheDataRecord.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.wan.impl.WanReplicationServiceImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.util.ResultSet.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPutAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueueTakeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueuePollMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.util.concurrent.MPSCQueue.put | MUTATION | METHOD_NO_LONGER_THROWS_CHECKED_EXCEPTION\ncom.hazelcast.cache.impl.AbstractCacheRecordStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapSetTtlCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.fd.PhiAccrualClusterFailureDetector.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueIsEmptyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.semaphore.client.GetSemaphoreTypeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.semaphore.client.InitSemaphoreMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.DeferredValue.get | DELETION | METHOD_REMOVED\ncom.hazelcast.spi.impl.operationparker.impl.WaitSet.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapPutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SemaphoreAvailablePermitsCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.PartitioningStrategyConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapReplaceIfSameMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapRemoveInterceptorCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.MaxSizeConfig$MaxSizePolicy | DELETION | TYPE_REMOVED\ncom.hazelcast.cp.internal.raft.impl.log.RaftLog.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.ClusterServiceImpl.getMembers | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.internal.adapter.ReplicatedMapDataStructureAdapter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.GetAllOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMultiMapPutCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheSetExpiryPolicyOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetIsEmptyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.ContainsKeyOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientAddDistributedObjectListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheContainsKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.MembershipEvent | DELETION | TYPE_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapSetReadCursorMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.AddIndexOperationFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionCommitCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapAddEntryListenerToKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.DefaultMapProjectMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheCreateConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.operations.FinalizeRemoteTransactionBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapAddEntryListenerToKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueContainsAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.event.ICacheEvent.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.internal.partition.operation.PromotionCommitOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueCompareAndRetainAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapIsEmptyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.dto.VoteRequest.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapContainsKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapDestroyCacheMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.TxnRollbackBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.spi.blocking.WaitKey.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnLockAndGetOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueIsEmptyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalQueueTakeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.DiscoveryJoiner.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.crdt.pncounter.PNCounterAddMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.reliable.ReliableTopicProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.PutAllOperationFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.AddIndexOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapKeySetWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorRetrieveAndDisposeResultMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetCompareAndRemoveAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnCommitOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.getClass | DELETION | METHOD_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnReserveOfferBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.GetOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.RingbufferMergingValueImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.store.NearCacheObjectRecordStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnCommitBackupOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.transaction.XAClearRemoteTransactionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.operations.CollectionAddAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.cp.internal.session.ProxySessionManagerService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.MapMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapValuesMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.MemberSelectingCollection.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListContainsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.operations.FinalizeJoinOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.XATransactionRollbackMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnRemoveBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.CardinalityEstimatorMergingEntry.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.semaphore.client.ReleasePermitsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueDrainMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.MemberLeftException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddTopicConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.EntryListenerConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.StorageImpl.put | DELETION | METHOD_REMOVED\ncom.hazelcast.cp.internal.raft.impl.dto.AppendSuccessResponse.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.XACollectTransactionsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapAddEntryListenerToKeyWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.QueueTransactionRollbackOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapRemoveEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.MergeOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnPeekOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapIsEmptyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.DefaultRecordStore.put | DELETION | METHOD_REMOVED\ncom.hazelcast.topic.impl.PublishOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapContainsKeyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.AbstractContainerCollector.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.iterator.AbstractMapQueryPartitionIterator.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheGetAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.instance.BuildInfo.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapValueCountMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.MemberAttributeConfig.getStringAttribute | DELETION | METHOD_REMOVED\ncom.hazelcast.cache.impl.ICacheRecordStore.get | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceSubmitToPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetDelayFromPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.CollectionTransactionLogRecord.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.NearCacheConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.nearcache.invalidation.UuidFilter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapClearMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.journal.MapEventJournalReadOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.list.operations.ListAddAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddScheduledExecutorConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomiclong.client.GetAndSetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.XATransactionPrepareCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.impl.IndexImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorCancelFromPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.ringbuffer.impl.operations.ReplicationOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.DurableExecutorRetrieveAndDisposeResultCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.ICacheRecordStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnPrepareOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.RemoveAllOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TopicAddMessageListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.MembersView.getMember | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapValuesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.events.WanSyncStartedEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalQueueSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetContainsAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.exception.NotLeaderException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.ReplaceIfSameOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddRingbufferConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.logging.LogEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetDelayFromPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.task.ReplicateTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.subscriber.QueryCacheRecordStore.get | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueuePeekMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueContainsCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapExecuteWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapPutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CPSessionCreateSessionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAggregateWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListAddAllWithIndexMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.networking.nio.NioChannel.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.list.operations.ListSetOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalset.TransactionalSetAddMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.store.AbstractNearCacheRecordStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.impl.IndexStore.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapPutIfAbsentCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheLoadAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.cache.CacheReplaceMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorShutdownMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.AbstractCacheRecordStore.get | DELETION | METHOD_REMOVED\ncom.hazelcast.core.Cluster | DELETION | TYPE_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapPutCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.ManagementCenterService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddRingbufferConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapPutIfAbsentMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.client.CompareAndSetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.ICacheRecordStore.put | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetResultFromPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapAddInterceptorCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapForceUnlockCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapClearMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheListenerRegistrationCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.ClusterService.getMember | DELETION | METHOD_REMOVED\ncom.hazelcast.transaction.impl.TransactionImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapIsEmptyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListCompareAndRemoveAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.operation.MigrationCommitOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.lock.client.GetLockOwnershipStateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapEntrySetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.EntryOffloadableSetUnlockOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.CountDownLatchMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.session.client.CreateSessionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.AtomicLongMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheAddEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.event.SingleIMapEvent.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.task.map.MapFetchNearCacheInvalidationMetadataTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.countdownlatch.client.TrySetCountMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientAddPartitionLostListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.operation.SetOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.event.MapEventData.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.topic.impl.reliable.ReliableMessageRunner.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.internal.management.dto.ProxyServiceDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheBackupEntryProcessorOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionRollbackCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientCreateProxiesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.ReplaceOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.AtomicLongGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferReadOneCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.LatencyTrackingQueueStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.MapMergingEntryImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapRemoveEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.CollectionEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.impl.PartitionEventManager.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.QueueService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.txn.TxnRollbackBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapValueCountCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.executor.impl.operations.CancellationOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.serialization.impl.ArrayDataSerializableFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raftop.GetInitialRaftGroupMembersIfCurrentGroupMemberOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionallist.TransactionalListRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapContainsValueMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetGetAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.AtomicLongCompareAndSetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.session.RaftSessionService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheRemoveInvalidationListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.ClientServiceProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.Cluster.removeMembershipListener | DELETION | METHOD_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomiclong.client.GetAndAddMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheMergeOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.DestroyProxyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapRemoveIfSameMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheGetConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.exception.MismatchingGroupMembersCommitIndexException.getMembers | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MapAddEntryListenerWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DurableExecutorShutdownCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.mapstore.writethrough.WriteThroughStore.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.PNCounterGetConfiguredReplicaCountCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListGetAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.scheduledexecutor.impl.AbstractScheduledExecutorContainerHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPutIfAbsentMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.notifyAll | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetContainsCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.EntryEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractTransactionalMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionCommitOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MultiMapRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.countdownlatch.client.GetCountMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddEntryListenerToKeyWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapContainsValueCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapValuesMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.operation.PartitionBackupReplicaAntiEntropyOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.cp.internal.raft.impl.state.LeaderState.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomiclong.client.GetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SemaphoreInitCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.operations.CollectionCompareAndRemoveOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.cache.CachePutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.AbstractMultiPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetAddMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListListIteratorMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.DefaultNearCacheManager.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.exception.MemberAlreadyExistsException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.operations.BroadcastTxRollbackOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapKeySetWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListSubCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorGetAllScheduledMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetAddCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.proxy.MapProxyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferRemainingCapacityCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DurableExecutorSubmitToPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheSetExpiryPolicyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapEntrySetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListAddWithIndexMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapValuesCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapGetForUpdateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.set.SetProxyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheRemoveAllOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.ClientAuthenticationCustomCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.BindMessage.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.operationservice.impl.operations.PartitionIteratingOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapEvictCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorRetrieveResultMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheAddEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.subscriber.QueryCacheEndToEndProvider.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.dto.ClientEndPointDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapAddEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.RemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapAddEntryListenerToKeyWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapPutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.AtomicLongGetAndAddCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.DataAwareEntryEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueCompareAndRetainAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.ClientEngineImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapUnlockCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.event.CachePartitionLostEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.ContainsValueOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.record.ObjectRecordFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.ReplicaFragmentMigrationState.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddCardinalityEstimatorConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.EvictionConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheEntryProcessorCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.dto.EventServiceDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.dynamicconfig.ClusterWideConfigurationService$Merger.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.ContainsValueOperationFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapGetEntryViewCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.proxyservice.impl.ProxyInfo.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.client.ContainsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapSetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.lock.client.TryLockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cardinality.CardinalityEstimatorEstimateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.session.client.GenerateThreadIdMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.AbstractKeyBasedMultiMapOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.BaseRemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.exception.WrongTargetException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.events.WanConsistencyCheckFinishedEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.query.QueryResultCollection.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueueAddAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.PutFromLoadAllOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.TransactionRollbackMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskDisposeFromPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapEntrySetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.RemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.util.LockGuard.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.MaxSizeConfigReadOnly | DELETION | TYPE_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapMadePublishableMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.MerkleTreeNodeEntries.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.internal.nearcache.impl.invalidation.AbstractBaseNearCacheInvalidationListener.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.exception.MismatchingGroupMembersCommitIndexException.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapDeleteMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.ClusterServiceImpl.getMembers | DELETION | METHOD_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnReservePollOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomiclong.client.AddAndGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.cluster.impl.ClusterServiceImpl.getMember | DELETION | METHOD_REMOVED\ncom.hazelcast.cp.internal.raft.impl.state.RaftState.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalset.TransactionalSetSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.EntryEventFilter.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.discovery.SimpleDiscoveryNode.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapLockCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapAddEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientStatisticsCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferCapacityMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.EntryOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapAddNearCacheInvalidationListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.management.dto.ConnectionManagerDTO.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapTryRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.ringbuffer.impl.RingbufferProxy.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.VersionedValue.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.TryRemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.invalidation.NonStopInvalidator.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.exception.CannotReplicateException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferSizeMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientCreateProxyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnCommitOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.codec.TransactionalListRemoveCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.dto.PreVoteRequest.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.AbstractMapPutWithMaxIdleMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionCreateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CountDownLatchCountDownCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheRemoveAllKeysMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.RaftNodeImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.AddSetConfigMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapEventJournalReadCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.impl.CachedQueryEntry.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.ManagementService.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMultiMapGetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.MergeOperationFactory.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.spi.impl.eventservice.impl.operations.RegistrationOperationSupplier.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.multimap.impl.txn.TxnRemoveAllBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.ClientHeartbeatMonitor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListSetCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapProjectionWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapKeySetWithPredicateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheDestroyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPutIfAbsentWithMaxIdleMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.IMapEvent | DELETION | TYPE_REMOVED\ncom.hazelcast.multimap.impl.operations.MultiMapOperationFactory.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.event.AbstractICacheEvent.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionReserveRemoveOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.MultiMapContainer.remove | DELETION | METHOD_REMOVED\ncom.hazelcast.spi.impl.eventservice.impl.RemoteEventProcessor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferAddCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.QueueProxyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.dynamicconfig.PredicateConfigHolder.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.QueueTransactionLogRecord.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.dto.PreVoteResponse.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.hashCode | DELETION | METHOD_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DynamicConfigAddQueueConfigCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.impl.SingleResultSet.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.queue.QueuePutMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapReplaceIfSameMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.journal.DeserializingEntry.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapRemoveEntryListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapSizeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.RemoveAllBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapContainsValueMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CPSessionCloseSessionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CachePutAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListAddListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.iterator.AbstractCursor.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.config.ScheduledExecutorConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.replicatedmap.impl.operation.PutAllOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.durableexecutor.impl.operations.TaskOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapUnlockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.crdt.pncounter.PNCounterGetConfiguredReplicaCountMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.query.impl.QueryEntry.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.collection.operations.CollectionMergeOperation.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapRemoveMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionTransactionRollbackOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListContainsCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.list.ListContainer.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.KeyBasedMapOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapForceUnlockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnReserveOfferOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.partition.operation.PartitionReplicaSyncRequest.<init> | MUTATION | METHOD_PARAMETER_GENERICS_CHANGED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapKeySetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheRemoveAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListCompareAndRetainAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.AbstractCompletableFuture.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.task.GetDistributedObjectsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapGetEntryViewMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.multimap.impl.operations.EntrySetResponse.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CacheGetOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ReplicatedMapPutAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.nearcache.impl.invalidation.SingleNearCacheInvalidation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapEntrySetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapEventJournalReadTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.exception.LeaderDemotedException.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.spi.client.DestroyRaftObjectMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListAddWithIndexCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.client.ApplyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.list.ListAddMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.atomicref.operation.CompareAndSetOp.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.recordstore.RecordStore.put | DELETION | METHOD_REMOVED\ncom.hazelcast.map.impl.tx.TxnSetOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.transaction.XAFinalizeTransactionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.multimap.MultiMapKeySetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ScheduledExecutorIsDoneFromPartitionCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\njava.lang.Object.toString | MUTATION | METHOD_NOW_FINAL\ncom.hazelcast.internal.jmx.PartitionServiceMBean.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.queue.QueueEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapValuesWithPredicateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.transaction.impl.xa.operations.ClearRemoteTransactionBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.spi.impl.merge.ReplicatedMapMergingEntryImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapEvictMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.EventLostEvent.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.logging.LogEvent.getMember | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionTxnAddOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.tx.TxnRollbackOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapIsEmptyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.MapPartitionLostEvent.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapGetMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.set.SetAddAllMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPublisherCreateMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ListIteratorCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.operation.CachePutBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheEntryProcessorMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.CacheEventJournalSubscribeCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientRemoveDistributedObjectListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.TryPutOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.internal.jmx.suppliers.LocalMultiMapStatsSupplier.get | MUTATION | METHOD_RETURN_TYPE_CHANGED\ncom.hazelcast.client.impl.protocol.codec.MapAggregateCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.ClientImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.raft.impl.dto.AppendFailureResponse.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.DurableExecutorDisposeResultCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cache.impl.CacheEntryProcessorEntry.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapContainsKeyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MapIsLockedCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txncollection.operations.CollectionPrepareBackupOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.cp.internal.datastructures.lock.client.UnlockMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.ClientStatisticsMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.core.MapEvent | DELETION | TYPE_REMOVED\ncom.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddEntryListenerMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.collection.impl.txnqueue.operations.TxnOfferOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.cache.CacheDestroyMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.operation.SetOperation.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskIsCancelledFromPartitionMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.ClientDestroyProxyCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapIsLockedMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.XATransactionClearRemoteCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.QueuePutCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.queue.QueueIteratorMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.map.impl.querycache.publisher.PartitionAccumulatorRegistry.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.TransactionalMapReplaceCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.SetAddListenerCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.RingbufferAddAllCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.task.map.MapPutWithMaxIdleMessageTask.<init> | DELETION | CONSTRUCTOR_REMOVED\ncom.hazelcast.client.impl.protocol.codec.MultiMapLockCodec.<init> | DELETION | CONSTRUCTOR_REMOVED\nBefore proposing a fix, please analyze the situation and plan your approach within\n<repair strategy> tags:\n\n- Identify the specific API changes that are causing the failure in the client code. \n- Compare the old and new API versions, noting any changes in method signatures, return types, or parameter lists. \n- Determine which parts of the client code need to be updated to accommodate these API changes. \n- Consider any constraints or requirements for the fix (e.g., not changing function signatures, potential import adjustments). \n- Plan the minimal set of changes needed to fix the issue while keeping the code functional and compliant with the new API. \n- Consider potential side effects of the proposed changes on other parts of the code. \n- Ensure that the planned changes will result in a complete and compilable class. \n- If applicable, note any additional imports that may be needed due to the API changes.  \n- Propose a patch that can be applied to the code to fix the issue. \n- Return only a complete and compilable class in a fenced code block. \n- You CANNOT change the function signature of any method but may create variables if it simplifies the code. \n- You CAN remove the @Override annotation IF AND ONLY IF the method no longer overrides a method in the updated dependency version. \n- If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version. \n- Avoid removing any existing code unless it directly causes a compilation or functionality error. \n- Return only the fixed class, ensuring it fully compiles and adheres to these constraints.",
    "project": "openfire-hazelcast-plugin",
    "libraryName": "hazelcast",
    "libraryGroupID": "com.hazelcast",
    "newVersion": "4.0.5",
    "previousVersion": "3.12.5"
}