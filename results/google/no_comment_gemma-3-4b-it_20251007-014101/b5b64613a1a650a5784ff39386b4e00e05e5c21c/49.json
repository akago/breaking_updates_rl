{
    "absolute_path_to_file_in_container": "/artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/declarative/steps/CreateServerStep.java",
    "errors": [
        {
            "line_number": 129,
            "message": "[ERROR] /artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/declarative/steps/CreateServerStep.java:[129,17] cannot find symbol",
            "additional_info": "  symbol:   method isAllBlank(java.lang.String,java.lang.String)\n  location: class org.jfrog.hudson.pipeline.declarative.steps.CreateServerStep.Execution",
            "file_name": "CreateServerStep.java",
            "uid": "e18cf3bd-9539-56fa-92da-76f502d86781"
        }
    ],
    "prompt": "Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation. \nYou are specialized in breaking dependency updates, in which the failure is caused by an external dependency. \nTo solve the failure you can only work on the client code.\n\nAPI upgrade: p4 1.3.8->1.11.5\n\nthe following client code fails: \n'''java\npackage org.jfrog.hudson.pipeline.declarative.steps;\nimport CreateJFrogInstanceStep;\nimport java.io.IOException;\nimport com.google.inject.Inject;\nimport hudson.Extension;\nimport org.jenkinsci.plugins.workflow.steps.AbstractStepDescriptorImpl;\nimport org.jenkinsci.plugins.workflow.steps.AbstractStepImpl;\nimport org.jenkinsci.plugins.workflow.steps.StepContext;\nimport org.jfrog.hudson.pipeline.ArtifactorySynchronousStepExecution;\nimport org.jfrog.hudson.pipeline.common.types.ArtifactoryServer;\nimport org.jfrog.hudson.pipeline.common.types.DistributionServer;\nimport org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance;\nimport org.jfrog.hudson.pipeline.declarative.BuildDataFile;\nimport org.jfrog.hudson.pipeline.declarative.utils.DeclarativePipelineUtils;\nimport org.jfrog.hudson.util.BuildUniqueIdentifierHelper;\nimport org.jfrog.hudson.util.JenkinsBuildInfoLog;\nimport org.kohsuke.stapler.DataBoundConstructor;\nimport org.kohsuke.stapler.DataBoundSetter;\nimport static org.apache.commons.lang3.StringUtils.*;\n@SuppressWarnings(\"unused\")\npublic class CreateServerStep extends AbstractStepImpl {\n    public static final String STEP_NAME = \"rtServer\";\n\n    private final String id;\n\n    private Integer deploymentThreads;\n\n    private String credentialsId;\n\n    private Boolean bypassProxy;\n\n    private String username;\n\n    private String password;\n\n    private Integer timeout;\n\n    private Integer retry;\n\n    private String url;\n\n    @DataBoundConstructor\n    public CreateServerStep(String id) {\n        this.id = id;\n    }\n\n    @DataBoundSetter\n    public void setUrl(String url) {\n        this.url = url;\n    }\n\n    @DataBoundSetter\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    @DataBoundSetter\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    @DataBoundSetter\n    public void setCredentialsId(String credentialsId) {\n        this.credentialsId = credentialsId;\n    }\n\n    @DataBoundSetter\n    public void setBypassProxy(boolean bypassProxy) {\n        this.bypassProxy = bypassProxy;\n    }\n\n    @DataBoundSetter\n    public void setTimeout(int timeout) {\n        this.timeout = timeout;\n    }\n\n    @DataBoundSetter\n    public void setRetry(int retry) {\n        this.retry = retry;\n    }\n\n    @DataBoundSetter\n    public void setDeploymentThreads(int deploymentThreads) {\n        this.deploymentThreads = deploymentThreads;\n    }\n\n    public static class Execution extends ArtifactorySynchronousStepExecution<Void> {\n        protected static final long serialVersionUID = 1L;\n\n        private transient final CreateServerStep step;\n\n        @Inject\n        public Execution(CreateServerStep step, StepContext context) throws IOException, InterruptedException {\n            super(context);\n            this.step = step;\n        }\n\n        @Override\n        protected Void runStep() throws Exception {\n            ArtifactoryServer server = DeclarativePipelineUtils.getArtifactoryServer(build, ws, step.id, false);\n            if (server == null) {\n                server = new ArtifactoryServer();\n            }\n            checkInputs(server);\n            overrideServerParameters(server);\n            JFrogPlatformInstance instance = new JFrogPlatformInstance(server, new DistributionServer(), \"\", step.id);\n            BuildDataFile buildDataFile = new BuildDataFile(CreateJFrogInstanceStep.STEP_NAME, step.id);\n            buildDataFile.putPOJO(instance);\n            String buildNumber = BuildUniqueIdentifierHelper.getBuildNumber(build);\n            DeclarativePipelineUtils.writeBuildDataFile(rootWs, buildNumber, buildDataFile, new JenkinsBuildInfoLog(listener));\n            return null;\n        }\n\n        @Override\n        public ArtifactoryServer getUsageReportServer() throws Exception {\n            return null;\n        }\n\n        @Override\n        public String getUsageReportFeatureName() {\n            return null;\n        }\n\n        private void checkInputs(ArtifactoryServer server) throws IOException {\n            if (isAllBlank(server.getUrl(), step.url)) {\n                throw new IOException(\"Server URL is missing\");\n            }\n            if (isNotBlank(step.credentialsId)) {\n                if (isNotBlank(step.username)) {\n                    throw new IOException(\"'rtServer' step can't include both credentialsId and username\");\n                }\n                if (isNotBlank(step.password)) {\n                    throw new IOException(\"'rtServer' step can't include both credentialsId and password\");\n                }\n            }\n        }\n\n        private void overrideServerParameters(ArtifactoryServer server) {\n            if (isNotBlank(step.url)) {\n                server.setUrl(step.url);\n            }\n            if (isNotBlank(step.credentialsId)) {\n                server.setCredentialsId(step.credentialsId);\n            }\n            if (isNotBlank(step.username)) {\n                server.setUsername(step.username);\n            }\n            if (isNotBlank(step.password)) {\n                server.setPassword(step.password);\n            }\n            if (step.deploymentThreads != null) {\n                server.setDeploymentThreads(step.deploymentThreads);\n            }\n            if (step.bypassProxy != null) {\n                server.setBypassProxy(step.bypassProxy);\n            }\n            if (step.retry != null) {\n                server.getConnection().setRetry(step.retry);\n            }\n            if (step.timeout != null) {\n                server.getConnection().setTimeout(step.timeout);\n            }\n        }\n    }\n\n    @Extension\n    public static final class DescriptorImpl extends AbstractStepDescriptorImpl {\n        public DescriptorImpl() {\n            super(CreateServerStep.Execution.class);\n        }\n\n        @Override\n        public String getFunctionName() {\n            return STEP_NAME;\n        }\n\n        @Override\n        public String getDisplayName() {\n            return \"Creates new Artifactory server\";\n        }\n\n        @Override\n        public boolean isAdvanced() {\n            return true;\n        }\n    }\n}\n\n'''\nthe error is triggered in the following specific lines in the previous code:\n            if (isAllBlank(server.getUrl(), step.url)) {\nwith the following error message:\n[ERROR] /artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/declarative/steps/CreateServerStep.java:[129,17] cannot find symbol  symbol:   method isAllBlank(java.lang.String,java.lang.String)\n  location: class org.jfrog.hudson.pipeline.declarative.steps.CreateServerStep.Execution\nThe error is caused by a change in the API of the dependency. The new library version includes the following changes:\nFormat: element | nature | kind\norg.jenkinsci.plugins.p4.review.ReviewAction.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.PublishTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.stop | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.workflow.P4UnshelveStep$P4UnshelveStepExecution.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.UnshelveTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.changes.P4ChangeParser$ChangeLogHandler.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.unshelveFiles | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.P4WebBrowser.url | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.populate.ForceCleanImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.publish.Publish.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.populate.AutoCleanImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.changes.P4ChangeParser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.workflow.P4TaggingStep$P4TaggingStepExecution.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tagging.TagAction.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.credentials.P4BaseCredentials.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.P4WebBrowser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.versionFile | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.credentials.P4PasswordImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.p4credential | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.credentials.P4TicketImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.disconnect | MUTATION | METHOD_NOW_PROTECTED\norg.jenkinsci.plugins.p4.client.ClientHelper.getClientHead | MUTATION | METHOD_RETURN_TYPE_CHANGED\norg.jenkinsci.plugins.p4.browsers.P4Browser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tagging.TagNotifier.log | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.getChangeSummary | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.getChangeFiles | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.browsers.FishEyeBrowser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.SwarmBrowser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.doCheckCredential | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.NavigateHelper.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.AbstractTask.getClient | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.browsers.FishEyeBrowser.url | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.browsers.SwarmBrowser.url | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.tasks.RemoveClientTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.listChanges | MUTATION | METHOD_RETURN_TYPE_CHANGED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.listener | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm.buildEnvVars | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.authorisationConfig | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isEnabled | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.populate.CheckOnlyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.PollTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.getChange | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.<init> | MUTATION | METHOD_NOW_THROWS_CHECKED_EXCEPTION\norg.jenkinsci.plugins.p4.tasks.TaggingTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.CheckoutTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.workspace.Workspace.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.populate.SyncOnlyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.publishChange | MUTATION | METHOD_RETURN_TYPE_CHANGED\norg.jenkinsci.plugins.p4.PerforceScm.getDescriptor | MUTATION | METHOD_RETURN_TYPE_CHANGED\norg.jenkinsci.plugins.p4.PerforceScm.DESCRIPTOR | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.listChanges | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.publish.ShelveImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.publish.SubmitImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.AbstractTask.getConnection | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.syncFiles | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm.getChanges | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.setClient | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.connectionConfig | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.workflow.P4PublishStep$P4PublishStepExecution.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.AbstractTask.getCredential | MUTATION | METHOD_NOW_THROWS_CHECKED_EXCEPTION\norg.jenkinsci.plugins.p4.console.P4Logging.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.connection | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.listHaveChanges | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.tasks.AbstractTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.url | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.buildChange | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.populate.Populate.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.doFillCredentialItems | DELETION | METHOD_REMOVED\n\n- Identify the specific API changes that are causing the failure in the client code. \n- Compare the old and new API versions, noting any changes in method signatures, return types, or parameter lists. \n- Determine which parts of the client code need to be updated to accommodate these API changes. \n- Consider any constraints or requirements for the fix (e.g., not changing function signatures, potential import adjustments). \n- Plan the minimal set of changes needed to fix the issue while keeping the code functional and compliant with the new API. \n- Consider potential side effects of the proposed changes on other parts of the code. \n- Ensure that the planned changes will result in a complete and compilable class. \n- If applicable, note any additional imports that may be needed due to the API changes.  \n- Propose a patch that can be applied to the code to fix the issue. \n- Return only a complete and compilable class in a fenced code block. \n- You CANNOT change the function signature of any method but may create variables if it simplifies the code. \n- You CAN remove the @Override annotation IF AND ONLY IF the method no longer overrides a method in the updated dependency version. \n- If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version. \n- Avoid removing any existing code unless it directly causes a compilation or functionality error. \n- Return only the fixed class, ensuring it fully compiles and adheres to these constraints.",
    "buggy_lines": "            if (isAllBlank(server.getUrl(), step.url)) {",
    "error_message": "[ERROR] /artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/declarative/steps/CreateServerStep.java:[129,17] cannot find symbol  symbol:   method isAllBlank(java.lang.String,java.lang.String)\n  location: class org.jfrog.hudson.pipeline.declarative.steps.CreateServerStep.Execution",
    "api_diff": "Format: element | nature | kind\norg.jenkinsci.plugins.p4.review.ReviewAction.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.PublishTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.stop | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.workflow.P4UnshelveStep$P4UnshelveStepExecution.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.UnshelveTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.changes.P4ChangeParser$ChangeLogHandler.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.unshelveFiles | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.P4WebBrowser.url | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.populate.ForceCleanImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.publish.Publish.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.populate.AutoCleanImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.changes.P4ChangeParser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.workflow.P4TaggingStep$P4TaggingStepExecution.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tagging.TagAction.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.credentials.P4BaseCredentials.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.P4WebBrowser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.versionFile | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.credentials.P4PasswordImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.p4credential | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.credentials.P4TicketImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.disconnect | MUTATION | METHOD_NOW_PROTECTED\norg.jenkinsci.plugins.p4.client.ClientHelper.getClientHead | MUTATION | METHOD_RETURN_TYPE_CHANGED\norg.jenkinsci.plugins.p4.browsers.P4Browser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tagging.TagNotifier.log | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.getChangeSummary | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.getChangeFiles | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.browsers.FishEyeBrowser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionConfig.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.SwarmBrowser.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.doCheckCredential | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.NavigateHelper.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.AbstractTask.getClient | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.browsers.FishEyeBrowser.url | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.browsers.SwarmBrowser.url | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.tasks.RemoveClientTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.listChanges | MUTATION | METHOD_RETURN_TYPE_CHANGED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.listener | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm.buildEnvVars | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.authorisationConfig | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isEnabled | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.populate.CheckOnlyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.PollTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.getChange | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.<init> | MUTATION | METHOD_NOW_THROWS_CHECKED_EXCEPTION\norg.jenkinsci.plugins.p4.tasks.TaggingTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.CheckoutTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.workspace.Workspace.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.populate.SyncOnlyImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.publishChange | MUTATION | METHOD_RETURN_TYPE_CHANGED\norg.jenkinsci.plugins.p4.PerforceScm.getDescriptor | MUTATION | METHOD_RETURN_TYPE_CHANGED\norg.jenkinsci.plugins.p4.PerforceScm.DESCRIPTOR | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.listChanges | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.publish.ShelveImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.publish.SubmitImpl.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.AbstractTask.getConnection | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.syncFiles | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm.getChanges | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.setClient | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.connectionConfig | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.workflow.P4PublishStep$P4PublishStepExecution.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.tasks.AbstractTask.getCredential | MUTATION | METHOD_NOW_THROWS_CHECKED_EXCEPTION\norg.jenkinsci.plugins.p4.console.P4Logging.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.client.ConnectionHelper.connection | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.listHaveChanges | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.tasks.AbstractTask.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.url | DELETION | FIELD_REMOVED\norg.jenkinsci.plugins.p4.client.ClientHelper.buildChange | DELETION | METHOD_REMOVED\norg.jenkinsci.plugins.p4.populate.Populate.<init> | DELETION | CONSTRUCTOR_REMOVED\norg.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.doFillCredentialItems | DELETION | METHOD_REMOVED",
    "original_code": "package org.jfrog.hudson.pipeline.declarative.steps;\nimport CreateJFrogInstanceStep;\nimport java.io.IOException;\nimport com.google.inject.Inject;\nimport hudson.Extension;\nimport org.jenkinsci.plugins.workflow.steps.AbstractStepDescriptorImpl;\nimport org.jenkinsci.plugins.workflow.steps.AbstractStepImpl;\nimport org.jenkinsci.plugins.workflow.steps.StepContext;\nimport org.jfrog.hudson.pipeline.ArtifactorySynchronousStepExecution;\nimport org.jfrog.hudson.pipeline.common.types.ArtifactoryServer;\nimport org.jfrog.hudson.pipeline.common.types.DistributionServer;\nimport org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance;\nimport org.jfrog.hudson.pipeline.declarative.BuildDataFile;\nimport org.jfrog.hudson.pipeline.declarative.utils.DeclarativePipelineUtils;\nimport org.jfrog.hudson.util.BuildUniqueIdentifierHelper;\nimport org.jfrog.hudson.util.JenkinsBuildInfoLog;\nimport org.kohsuke.stapler.DataBoundConstructor;\nimport org.kohsuke.stapler.DataBoundSetter;\nimport static org.apache.commons.lang3.StringUtils.*;\n@SuppressWarnings(\"unused\")\npublic class CreateServerStep extends AbstractStepImpl {\n    public static final String STEP_NAME = \"rtServer\";\n\n    private final String id;\n\n    private Integer deploymentThreads;\n\n    private String credentialsId;\n\n    private Boolean bypassProxy;\n\n    private String username;\n\n    private String password;\n\n    private Integer timeout;\n\n    private Integer retry;\n\n    private String url;\n\n    @DataBoundConstructor\n    public CreateServerStep(String id) {\n        this.id = id;\n    }\n\n    @DataBoundSetter\n    public void setUrl(String url) {\n        this.url = url;\n    }\n\n    @DataBoundSetter\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    @DataBoundSetter\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    @DataBoundSetter\n    public void setCredentialsId(String credentialsId) {\n        this.credentialsId = credentialsId;\n    }\n\n    @DataBoundSetter\n    public void setBypassProxy(boolean bypassProxy) {\n        this.bypassProxy = bypassProxy;\n    }\n\n    @DataBoundSetter\n    public void setTimeout(int timeout) {\n        this.timeout = timeout;\n    }\n\n    @DataBoundSetter\n    public void setRetry(int retry) {\n        this.retry = retry;\n    }\n\n    @DataBoundSetter\n    public void setDeploymentThreads(int deploymentThreads) {\n        this.deploymentThreads = deploymentThreads;\n    }\n\n    public static class Execution extends ArtifactorySynchronousStepExecution<Void> {\n        protected static final long serialVersionUID = 1L;\n\n        private transient final CreateServerStep step;\n\n        @Inject\n        public Execution(CreateServerStep step, StepContext context) throws IOException, InterruptedException {\n            super(context);\n            this.step = step;\n        }\n\n        @Override\n        protected Void runStep() throws Exception {\n            ArtifactoryServer server = DeclarativePipelineUtils.getArtifactoryServer(build, ws, step.id, false);\n            if (server == null) {\n                server = new ArtifactoryServer();\n            }\n            checkInputs(server);\n            overrideServerParameters(server);\n            JFrogPlatformInstance instance = new JFrogPlatformInstance(server, new DistributionServer(), \"\", step.id);\n            BuildDataFile buildDataFile = new BuildDataFile(CreateJFrogInstanceStep.STEP_NAME, step.id);\n            buildDataFile.putPOJO(instance);\n            String buildNumber = BuildUniqueIdentifierHelper.getBuildNumber(build);\n            DeclarativePipelineUtils.writeBuildDataFile(rootWs, buildNumber, buildDataFile, new JenkinsBuildInfoLog(listener));\n            return null;\n        }\n\n        @Override\n        public ArtifactoryServer getUsageReportServer() throws Exception {\n            return null;\n        }\n\n        @Override\n        public String getUsageReportFeatureName() {\n            return null;\n        }\n\n        private void checkInputs(ArtifactoryServer server) throws IOException {\n            if (isAllBlank(server.getUrl(), step.url)) {\n                throw new IOException(\"Server URL is missing\");\n            }\n            if (isNotBlank(step.credentialsId)) {\n                if (isNotBlank(step.username)) {\n                    throw new IOException(\"'rtServer' step can't include both credentialsId and username\");\n                }\n                if (isNotBlank(step.password)) {\n                    throw new IOException(\"'rtServer' step can't include both credentialsId and password\");\n                }\n            }\n        }\n\n        private void overrideServerParameters(ArtifactoryServer server) {\n            if (isNotBlank(step.url)) {\n                server.setUrl(step.url);\n            }\n            if (isNotBlank(step.credentialsId)) {\n                server.setCredentialsId(step.credentialsId);\n            }\n            if (isNotBlank(step.username)) {\n                server.setUsername(step.username);\n            }\n            if (isNotBlank(step.password)) {\n                server.setPassword(step.password);\n            }\n            if (step.deploymentThreads != null) {\n                server.setDeploymentThreads(step.deploymentThreads);\n            }\n            if (step.bypassProxy != null) {\n                server.setBypassProxy(step.bypassProxy);\n            }\n            if (step.retry != null) {\n                server.getConnection().setRetry(step.retry);\n            }\n            if (step.timeout != null) {\n                server.getConnection().setTimeout(step.timeout);\n            }\n        }\n    }\n\n    @Extension\n    public static final class DescriptorImpl extends AbstractStepDescriptorImpl {\n        public DescriptorImpl() {\n            super(CreateServerStep.Execution.class);\n        }\n\n        @Override\n        public String getFunctionName() {\n            return STEP_NAME;\n        }\n\n        @Override\n        public String getDisplayName() {\n            return \"Creates new Artifactory server\";\n        }\n\n        @Override\n        public boolean isAdvanced() {\n            return true;\n        }\n    }\n}\n",
    "project": "artifactory-plugin",
    "libraryName": "p4",
    "libraryGroupID": "org.jenkins-ci.plugins",
    "newVersion": "1.11.5",
    "previousVersion": "1.3.8",
    "breakingCommit": "b5b64613a1a650a5784ff39386b4e00e05e5c21c",
    "patch": "```java\npackage org.jfrog.hudson.pipeline.declarative.steps;\n\nimport CreateJFrogInstanceStep;\nimport java.io.IOException;\nimport com.google.inject.Inject;\nimport hudson.Extension;\nimport org.jenkinsci.plugins.workflow.steps.AbstractStepDescriptorImpl;\nimport org.jenkinsci.plugins.workflow.steps.AbstractStepImpl;\nimport org.jenkinsci.plugins.workflow.steps.StepContext;\nimport org.jfrog.hudson.pipeline.ArtifactorySynchronousStepExecution;\nimport org.jfrog.hudson.pipeline.common.types.ArtifactoryServer;\nimport org.jfrog.hudson.pipeline.common.types.DistributionServer;\nimport org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance;\nimport org.jfrog.hudson.pipeline.declarative.BuildDataFile;\nimport org.jfrog.hudson.pipeline.declarative.utils.DeclarativePipelineUtils;\nimport org.jfrog.hudson.util.BuildUniqueIdentifierHelper;\nimport org.jfrog.hudson.util.JenkinsBuildInfoLog;\nimport org.kohsuke.stapler.DataBoundConstructor;\nimport org.kohsuke.stapler.DataBoundSetter;\nimport static org.apache.commons.lang3.StringUtils.*;\n@SuppressWarnings(\"unused\")\npublic class CreateServerStep extends AbstractStepImpl {\n    public static final String STEP_NAME = \"rtServer\";\n\n    private final String id;\n\n    private Integer deploymentThreads;\n\n    private String credentialsId;\n\n    private Boolean bypassProxy;\n\n    private String username;\n\n    private String password;\n\n    private Integer timeout;\n\n    private Integer retry;\n\n    private String url;\n\n    @DataBoundConstructor\n    public CreateServerStep(String id) {\n        this.id = id;\n    }\n\n    @DataBoundSetter\n    public void setUrl(String url) {\n        this.url = url;\n    }\n\n    @DataBoundSetter\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    @DataBoundSetter\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    @DataBoundSetter\n    public void setCredentialsId(String credentialsId) {\n        this.credentialsId = credentialsId;\n    }\n\n    @DataBoundSetter\n    public void setBypassProxy(boolean bypassProxy) {\n        this.bypassProxy = bypassProxy;\n    }\n\n    @DataBoundSetter\n    public void setTimeout(int timeout) {\n        this.timeout = timeout;\n    }\n\n    @DataBoundSetter\n    public void setRetry(int retry) {\n        this.retry = retry;\n    }\n\n    @DataBoundSetter\n    public void setDeploymentThreads(int deploymentThreads) {\n        this.deploymentThreads = deploymentThreads;\n    }\n\n    public static class Execution extends ArtifactorySynchronousStepExecution<Void> {\n        protected static final long serialVersionUID = 1L;\n\n        private transient final CreateServerStep step;\n\n        @Inject\n        public Execution(CreateServerStep step, StepContext context) throws IOException, InterruptedException {\n            super(context);\n            this.step = step;\n        }\n\n        @Override\n        protected Void runStep() throws Exception {\n            ArtifactoryServer server = DeclarativePipelineUtils.getArtifactoryServer(build, ws, step.id, false);\n            if (server == null) {\n                server = new ArtifactoryServer();\n            }\n            checkInputs(server);\n            overrideServerParameters(server);\n            JFrogPlatformInstance instance = new JFrogPlatformInstance(server, new DistributionServer(), \"\", step.id);\n            BuildDataFile buildDataFile = new BuildDataFile(CreateJFrogInstanceStep.STEP_NAME, step.id);\n            buildDataFile.putPOJO(instance);\n            String buildNumber = BuildUniqueIdentifierHelper.getBuildNumber(build);\n            DeclarativePipelineUtils.writeBuildDataFile(rootWs, buildNumber, buildDataFile, new JenkinsBuildInfoLog(listener));\n            return null;\n        }\n\n        @Override\n        public ArtifactoryServer getUsageReportServer() throws Exception {\n            return null;\n        }\n\n        @Override\n        public String getUsageReportFeatureName() {\n            return null;\n        }\n\n        private void checkInputs(ArtifactoryServer server) throws IOException {\n            if (isAllBlank(server.getUrl(), step.url)) {\n                throw new IOException(\"Server URL is missing\");\n            }\n            if (isNotBlank(step.credentialsId)) {\n                if (isNotBlank(step.username)) {\n                    throw new IOException(\"'rtServer' step can't include both credentialsId and username\");\n                }\n                if (isNotBlank(step.password)) {\n                    throw new IOException(\"'rtServer' step can't include both credentialsId and password\");\n                }\n            }\n        }\n\n        private void overrideServerParameters(ArtifactoryServer server) {\n            if (isNotBlank(step.url)) {\n                server.setUrl(step.url);\n            }\n            if (isNotBlank(step.credentialsId)) {\n                server.setCredentialsId(step.credentialsId);\n            }\n            if (isNotBlank(step.username)) {\n                server.setUsername(step.username);\n            }\n            if (isNotBlank(step.password)) {\n                server.setPassword(step.password);\n            }\n            if (step.deploymentThreads != null) {\n                server.setDeploymentThreads(step.deploymentThreads);\n            }\n            if (step.bypassProxy != null) {\n                server.setBypassProxy(step.bypassProxy);\n            }\n            if (step.timeout != null) {\n                server.getConnection().setTimeout(step.timeout);\n            }\n            if (step.retry != null) {\n                server.getConnection().setRetry(step.retry);\n            }\n        }\n    }\n\n    @Extension\n    public static final class DescriptorImpl extends AbstractStepDescriptorImpl {\n        public DescriptorImpl() {\n            super(CreateServerStep.Execution.class);\n        }\n\n        @Override\n        public String getFunctionName() {\n            return STEP_NAME;\n        }\n\n        @Override\n        public String getDisplayName() {\n            return \"Creates new Artifactory server\";\n        }\n\n        @Override\n        public boolean isAdvanced() {\n            return true;\n        }\n    }\n}\n```<end_of_turn>"
}