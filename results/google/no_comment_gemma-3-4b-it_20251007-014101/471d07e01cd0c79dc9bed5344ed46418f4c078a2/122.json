{
    "absolute_path_to_file_in_container": "/google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java",
    "errors": [
        {
            "line_number": 32,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[32,52] package com.google.api.services.cloudresourcemanager does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "d6fd0174-6921-594f-a6ba-0f34111ba536"
        },
        {
            "line_number": 33,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[33,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 34,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[34,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 35,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[35,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 36,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[36,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 37,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[37,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 38,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[38,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 39,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[39,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 40,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[40,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 41,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[41,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 42,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[42,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 43,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[43,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 44,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[44,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 45,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[45,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 46,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[46,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 47,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[47,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 48,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[48,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 49,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[49,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 50,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[50,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 51,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[51,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 52,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[52,58] package com.google.api.services.cloudresourcemanager.model does not exist",
            "additional_info": "",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "3400979b-ccd0-51b2-bb99-c617f6340d17"
        },
        {
            "line_number": 114,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[114,45] cannot find symbol",
            "additional_info": "  symbol:   class Operation\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "98967ee4-432b-54d5-a0ab-e49a35a654ff"
        },
        {
            "line_number": 132,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[132,17] cannot find symbol",
            "additional_info": "  symbol:   class CloudResourceManager\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "92c1ecd5-0a03-5bd1-9810-f95a08077706"
        },
        {
            "line_number": 151,
            "message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[151,53] cannot find symbol",
            "additional_info": "  symbol:   class Status\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc",
            "file_name": "HttpResourceManagerRpc.java",
            "uid": "281c032e-c7bc-58c9-bb19-cb43f49fd1b0"
        }
    ],
    "prompt": "Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation. \nYou are specialized in breaking dependency updates, in which the failure is caused by an external dependency. \nTo solve the failure you can only work on the client code.\n\nAPI upgrade: google-api-services-cloudresourcemanager v1-rev20220807-2.0.0->v3-rev20220807-2.0.0\n\nthe following client code fails: \n'''java\npackage com.google.cloud.resourcemanager.spi.v1beta1;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.Callable;\nimport com.google.api.client.http.HttpRequestInitializer;\nimport com.google.api.client.http.HttpTransport;\nimport com.google.api.client.json.JsonFactory;\nimport com.google.api.client.json.gson.GsonFactory;\nimport com.google.api.core.ApiClock;\nimport com.google.api.gax.retrying.ResultRetryAlgorithm;\nimport com.google.api.gax.retrying.RetrySettings;\nimport com.google.api.gax.retrying.TimedAttemptSettings;\nimport com.google.api.services.cloudresourcemanager.CloudResourceManager;\nimport com.google.api.services.cloudresourcemanager.model.ClearOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Constraint;\nimport com.google.api.services.cloudresourcemanager.model.GetEffectiveOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListProjectsResponse;\nimport com.google.api.services.cloudresourcemanager.model.Operation;\nimport com.google.api.services.cloudresourcemanager.model.OrgPolicy;\nimport com.google.api.services.cloudresourcemanager.model.Policy;\nimport com.google.api.services.cloudresourcemanager.model.Project;\nimport com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.SetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Status;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse;\nimport com.google.api.services.cloudresourcemanager.model.UndeleteProjectRequest;\nimport com.google.cloud.RetryHelper;\nimport com.google.cloud.Tuple;\nimport com.google.cloud.http.BaseHttpServiceException;\nimport com.google.cloud.http.HttpTransportOptions;\nimport com.google.cloud.resourcemanager.ResourceManagerException;\nimport com.google.cloud.resourcemanager.ResourceManagerOptions;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\nimport com.google.common.collect.ImmutableSet;\nimport org.threeten.bp.Duration;\nimport static com.google.cloud.RetryHelper.runWithRetries;\nimport static com.google.common.base.MoreObjects.firstNonNull;\nimport static java.net.HttpURLConnection.HTTP_FORBIDDEN;\nimport static java.net.HttpURLConnection.HTTP_NOT_FOUND;\n@Deprecated\npublic class HttpResourceManagerRpc implements ResourceManagerRpc {\n    private static final JsonFactory JSON_FACTORY = GsonFactory.getDefaultInstance();\n\n    private static final RetrySettings CREATE_RETRY_SETTINGS = RetrySettings.newBuilder().setTotalTimeout(Duration.ofMinutes(2)).setInitialRetryDelay(Duration.ofSeconds(5)).setRetryDelayMultiplier(1.5).setMaxRetryDelay(Duration.ofSeconds(11)).setJittered(true).setInitialRpcTimeout(Duration.ofSeconds(5)).setMaxRpcTimeout(Duration.ofSeconds(5)).build();\n\n    private static final ImmutableMap<Integer, Integer> RPC_TO_HTTP_CODES = ImmutableMap.<Integer, Integer>builder().put(0, 200).put(1, 499).put(2, 500).put(3, 400).put(4, 504).put(5, 404).put(6, 409).put(7, 403).put(16, 401).put(8, 429).put(9, 400).put(10, 409).put(11, 400).put(12, 501).put(13, 500).put(14, 503).put(15, 500).build();\n\n    private static final ResultRetryAlgorithm<Operation> OPERATION_HANDLER = new ResultRetryAlgorithm<Operation>() {\n        @Override\n        public TimedAttemptSettings createNextAttempt(Throwable prevThrowable, Operation prevResponse, TimedAttemptSettings prevSettings) {\n            return null;\n        }\n\n        @Override\n        public boolean shouldRetry(Throwable prevThrowable, Operation prevOp) {\n            if (prevThrowable == null) {\n                return (prevOp.getDone() == null) || (!prevOp.getDone());\n            }\n            return (prevThrowable instanceof ResourceManagerException) && ((ResourceManagerException) (prevThrowable)).isRetryable();\n        }\n    };\n\n    private final CloudResourceManager resourceManager;\n\n    private final ApiClock clock;\n\n    public HttpResourceManagerRpc(ResourceManagerOptions options) {\n        HttpTransportOptions transportOptions = ((HttpTransportOptions) (options.getTransportOptions()));\n        HttpTransport transport = transportOptions.getHttpTransportFactory().create();\n        HttpRequestInitializer initializer = transportOptions.getHttpRequestInitializer(options);\n        resourceManager = new CloudResourceManager.Builder(transport, JSON_FACTORY, initializer).setRootUrl(options.getHost()).setApplicationName(options.getApplicationName()).build();\n        clock = options.getClock();\n    }\n\n    private static ResourceManagerException translate(IOException exception) {\n        return new ResourceManagerException(exception);\n    }\n\n    private static ResourceManagerException translate(Status status) {\n        Integer code = RPC_TO_HTTP_CODES.get(status.getCode());\n        if (code == null) {\n            code = BaseHttpServiceException.UNKNOWN_CODE;\n        }\n        return new ResourceManagerException(code, status.getMessage());\n    }\n\n    @Override\n    public Project create(Project project) {\n        final Operation operation;\n        try {\n            operation = resourceManager.projects().create(project).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n        Operation finishedOp = runWithRetries(new Callable<Operation>() {\n            @Override\n            public Operation call() {\n                try {\n                    return resourceManager.operations().get(operation.getName()).execute();\n                } catch (IOException ex) {\n                    throw translate(ex);\n                }\n            }\n        }, CREATE_RETRY_SETTINGS, OPERATION_HANDLER, clock);\n        if (finishedOp.getError() != null) {\n            throw translate(finishedOp.getError());\n        }\n        try {\n            String responseTxt = JSON_FACTORY.toString(finishedOp.getResponse());\n            return JSON_FACTORY.fromString(responseTxt, Project.class);\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public void delete(String projectId) {\n        try {\n            resourceManager.projects().delete(projectId).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Project get(String projectId, Map<Option, ?> options) {\n        try {\n            return resourceManager.projects().get(projectId).setFields(Option.FIELDS.getString(options)).execute();\n        } catch (IOException ex) {\n            ResourceManagerException translated = translate(ex);\n            if ((translated.getCode() == HTTP_FORBIDDEN) || (translated.getCode() == HTTP_NOT_FOUND)) {\n                return null;\n            } else {\n                throw translated;\n            }\n        }\n    }\n\n    @Override\n    public Tuple<String, Iterable<Project>> list(Map<Option, ?> options) {\n        try {\n            ListProjectsResponse response = resourceManager.projects().list().setFields(Option.FIELDS.getString(options)).setFilter(Option.FILTER.getString(options)).setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options)).execute();\n            return Tuple.<String, Iterable<Project>>of(response.getNextPageToken(), response.getProjects());\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public void undelete(String projectId) {\n        try {\n            resourceManager.projects().undelete(projectId, new UndeleteProjectRequest()).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Project replace(Project project) {\n        try {\n            return resourceManager.projects().update(project.getProjectId(), project).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Policy getPolicy(String projectId) throws ResourceManagerException {\n        try {\n            return resourceManager.projects().getIamPolicy(projectId, new GetIamPolicyRequest()).execute();\n        } catch (IOException ex) {\n            ResourceManagerException translated = translate(ex);\n            if (translated.getCode() == HTTP_FORBIDDEN) {\n                return null;\n            } else {\n                throw translated;\n            }\n        }\n    }\n\n    @Override\n    public Policy replacePolicy(String projectId, Policy newPolicy) throws ResourceManagerException {\n        try {\n            return resourceManager.projects().setIamPolicy(projectId, new SetIamPolicyRequest().setPolicy(newPolicy)).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public List<Boolean> testPermissions(String projectId, List<String> permissions) throws ResourceManagerException {\n        try {\n            TestIamPermissionsResponse response = resourceManager.projects().testIamPermissions(projectId, new TestIamPermissionsRequest().setPermissions(permissions)).execute();\n            Set<String> permissionsOwned = ImmutableSet.copyOf(firstNonNull(response.getPermissions(), ImmutableList.<String>of()));\n            ImmutableList.Builder<Boolean> answer = ImmutableList.builder();\n            for (String p : permissions) {\n                answer.add(permissionsOwned.contains(p));\n            }\n            return answer.build();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Map<String, Boolean> testOrgPermissions(String resource, List<String> permissions) throws IOException {\n        try {\n            TestIamPermissionsResponse response = resourceManager.organizations().testIamPermissions(resource, new TestIamPermissionsRequest().setPermissions(permissions)).execute();\n            Set<String> permissionsOwned = ImmutableSet.copyOf(firstNonNull(response.getPermissions(), ImmutableList.<String>of()));\n            ImmutableMap.Builder<String, Boolean> answer = ImmutableMap.builder();\n            for (String permission : permissions) {\n                answer.put(permission, permissionsOwned.contains(permission));\n            }\n            return answer.build();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public void clearOrgPolicy(String resource, OrgPolicy orgPolicy) throws IOException {\n        try {\n            resourceManager.folders().clearOrgPolicy(resource, new ClearOrgPolicyRequest().setConstraint(orgPolicy.getConstraint()).setEtag(orgPolicy.getEtag())).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy getEffectiveOrgPolicy(String resource, String constraint) throws IOException {\n        try {\n            return resourceManager.folders().getEffectiveOrgPolicy(resource, new GetEffectiveOrgPolicyRequest().setConstraint(constraint)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy getOrgPolicy(String resource, String constraint) throws IOException {\n        try {\n            return resourceManager.folders().getOrgPolicy(resource, new GetOrgPolicyRequest().setConstraint(constraint)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public ListResult<Constraint> listAvailableOrgPolicyConstraints(String resource, Map<Option, ?> options) throws IOException {\n        try {\n            ListAvailableOrgPolicyConstraintsResponse response = resourceManager.folders().listAvailableOrgPolicyConstraints(resource, new ListAvailableOrgPolicyConstraintsRequest().setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options))).execute();\n            return ListResult.of(response.getNextPageToken(), response.getConstraints());\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public ListResult<OrgPolicy> listOrgPolicies(String resource, Map<Option, ?> options) throws IOException {\n        try {\n            ListOrgPoliciesResponse response = resourceManager.folders().listOrgPolicies(resource, new ListOrgPoliciesRequest().setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options))).execute();\n            return ListResult.of(response.getNextPageToken(), response.getPolicies());\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy replaceOrgPolicy(String resource, OrgPolicy orgPolicy) throws IOException {\n        try {\n            return resourceManager.folders().setOrgPolicy(resource, new SetOrgPolicyRequest().setPolicy(orgPolicy)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n}\n\n'''\nthe error is triggered in the following specific lines in the previous code:\nimport com.google.api.services.cloudresourcemanager.CloudResourceManager;\nimport com.google.api.services.cloudresourcemanager.model.ClearOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Constraint;\nimport com.google.api.services.cloudresourcemanager.model.GetEffectiveOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListProjectsResponse;\nimport com.google.api.services.cloudresourcemanager.model.Operation;\nimport com.google.api.services.cloudresourcemanager.model.OrgPolicy;\nimport com.google.api.services.cloudresourcemanager.model.Policy;\nimport com.google.api.services.cloudresourcemanager.model.Project;\nimport com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.SetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Status;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse;\nimport com.google.api.services.cloudresourcemanager.model.UndeleteProjectRequest;\n  private static final ResultRetryAlgorithm<Operation> OPERATION_HANDLER =\n  private final CloudResourceManager resourceManager;\n  private static ResourceManagerException translate(Status status) {\nwith the following error message:\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[32,52] package com.google.api.services.cloudresourcemanager does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[33,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[34,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[35,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[36,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[37,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[38,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[39,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[40,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[41,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[42,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[43,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[44,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[45,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[46,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[47,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[48,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[49,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[50,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[51,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[52,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[114,45] cannot find symbol  symbol:   class Operation\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[132,17] cannot find symbol  symbol:   class CloudResourceManager\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[151,53] cannot find symbol  symbol:   class Status\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc\nThe error is caused by a change in the API of the dependency. The new library version includes the following changes:\nFormat: element | nature | kind\ncom.google.api.services.cloudresourcemanager.model.ListPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Update | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ClearOrgPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.UndeleteProjectRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$ListOrgPolicies | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$GetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.BooleanConstraint | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManagerScopes | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.RestoreDefault | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListOrgPoliciesRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$GetEffectiveOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Create | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$ListAvailableOrgPolicyConstraints | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Project | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens$Create | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$Search | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListProjectsResponse | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Operations$Get | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$GetIamPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Delete | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$GetEffectiveOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListOrgPoliciesResponse | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$SetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$List | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ResourceId | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListConstraint | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$ClearOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$SetIamPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Operations | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$TestIamPermissions | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$SetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$SetIamPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$Get | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$SetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManagerRequestInitializer | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.SetOrgPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Builder | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$ClearOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.BooleanPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Binding | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.OrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$TestIamPermissions | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.GetOrgPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Status | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Constraint | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$ListOrgPolicies | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$GetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens$Get | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManagerRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$GetEffectiveOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$ListAvailableOrgPolicyConstraints | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$GetAncestry | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$GetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ProjectCreationStatus | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsResponse | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$ListOrgPolicies | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Operation | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.GetEffectiveOrgPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Get | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens$Delete | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Policy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$ClearOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Undelete | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$ListAvailableOrgPolicyConstraints | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$GetIamPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens$List | DELETION | TYPE_REMOVED\n\n- Identify the specific API changes that are causing the failure in the client code. \n- Compare the old and new API versions, noting any changes in method signatures, return types, or parameter lists. \n- Determine which parts of the client code need to be updated to accommodate these API changes. \n- Consider any constraints or requirements for the fix (e.g., not changing function signatures, potential import adjustments). \n- Plan the minimal set of changes needed to fix the issue while keeping the code functional and compliant with the new API. \n- Consider potential side effects of the proposed changes on other parts of the code. \n- Ensure that the planned changes will result in a complete and compilable class. \n- If applicable, note any additional imports that may be needed due to the API changes.  \n- Propose a patch that can be applied to the code to fix the issue. \n- Return only a complete and compilable class in a fenced code block. \n- You CANNOT change the function signature of any method but may create variables if it simplifies the code. \n- You CAN remove the @Override annotation IF AND ONLY IF the method no longer overrides a method in the updated dependency version. \n- If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version. \n- Avoid removing any existing code unless it directly causes a compilation or functionality error. \n- Return only the fixed class, ensuring it fully compiles and adheres to these constraints.",
    "buggy_lines": "import com.google.api.services.cloudresourcemanager.CloudResourceManager;\nimport com.google.api.services.cloudresourcemanager.model.ClearOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Constraint;\nimport com.google.api.services.cloudresourcemanager.model.GetEffectiveOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListProjectsResponse;\nimport com.google.api.services.cloudresourcemanager.model.Operation;\nimport com.google.api.services.cloudresourcemanager.model.OrgPolicy;\nimport com.google.api.services.cloudresourcemanager.model.Policy;\nimport com.google.api.services.cloudresourcemanager.model.Project;\nimport com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.SetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Status;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse;\nimport com.google.api.services.cloudresourcemanager.model.UndeleteProjectRequest;\n  private static final ResultRetryAlgorithm<Operation> OPERATION_HANDLER =\n  private final CloudResourceManager resourceManager;\n  private static ResourceManagerException translate(Status status) {",
    "error_message": "[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[32,52] package com.google.api.services.cloudresourcemanager does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[33,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[34,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[35,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[36,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[37,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[38,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[39,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[40,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[41,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[42,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[43,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[44,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[45,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[46,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[47,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[48,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[49,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[50,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[51,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[52,58] package com.google.api.services.cloudresourcemanager.model does not exist\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[114,45] cannot find symbol  symbol:   class Operation\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[132,17] cannot find symbol  symbol:   class CloudResourceManager\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc\n[ERROR] /google-cloud-java/java-resourcemanager/google-cloud-resourcemanager/src/main/java/com/google/cloud/resourcemanager/spi/v1beta1/HttpResourceManagerRpc.java:[151,53] cannot find symbol  symbol:   class Status\n  location: class com.google.cloud.resourcemanager.spi.v1beta1.HttpResourceManagerRpc",
    "api_diff": "Format: element | nature | kind\ncom.google.api.services.cloudresourcemanager.model.ListPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Update | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ClearOrgPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.UndeleteProjectRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$ListOrgPolicies | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$GetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.BooleanConstraint | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManagerScopes | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.RestoreDefault | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListOrgPoliciesRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$GetEffectiveOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Create | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$ListAvailableOrgPolicyConstraints | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Project | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens$Create | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$Search | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListProjectsResponse | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Operations$Get | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$GetIamPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Delete | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$GetEffectiveOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListOrgPoliciesResponse | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$SetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$List | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ResourceId | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListConstraint | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$ClearOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$SetIamPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Operations | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$TestIamPermissions | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$SetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$SetIamPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$Get | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$SetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManagerRequestInitializer | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.SetOrgPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Builder | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$ClearOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.BooleanPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Binding | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.OrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$TestIamPermissions | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.GetOrgPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Status | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Constraint | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$ListOrgPolicies | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$GetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens$Get | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManagerRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$GetEffectiveOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$ListAvailableOrgPolicyConstraints | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$GetAncestry | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$GetOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ProjectCreationStatus | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsResponse | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$ListOrgPolicies | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Operation | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.GetEffectiveOrgPolicyRequest | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Get | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens$Delete | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.model.Policy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$ClearOrgPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Projects$Undelete | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Folders$ListAvailableOrgPolicyConstraints | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Organizations$GetIamPolicy | DELETION | TYPE_REMOVED\ncom.google.api.services.cloudresourcemanager.CloudResourceManager$Liens$List | DELETION | TYPE_REMOVED",
    "original_code": "package com.google.cloud.resourcemanager.spi.v1beta1;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.Callable;\nimport com.google.api.client.http.HttpRequestInitializer;\nimport com.google.api.client.http.HttpTransport;\nimport com.google.api.client.json.JsonFactory;\nimport com.google.api.client.json.gson.GsonFactory;\nimport com.google.api.core.ApiClock;\nimport com.google.api.gax.retrying.ResultRetryAlgorithm;\nimport com.google.api.gax.retrying.RetrySettings;\nimport com.google.api.gax.retrying.TimedAttemptSettings;\nimport com.google.api.services.cloudresourcemanager.CloudResourceManager;\nimport com.google.api.services.cloudresourcemanager.model.ClearOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Constraint;\nimport com.google.api.services.cloudresourcemanager.model.GetEffectiveOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListProjectsResponse;\nimport com.google.api.services.cloudresourcemanager.model.Operation;\nimport com.google.api.services.cloudresourcemanager.model.OrgPolicy;\nimport com.google.api.services.cloudresourcemanager.model.Policy;\nimport com.google.api.services.cloudresourcemanager.model.Project;\nimport com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.SetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Status;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse;\nimport com.google.api.services.cloudresourcemanager.model.UndeleteProjectRequest;\nimport com.google.cloud.RetryHelper;\nimport com.google.cloud.Tuple;\nimport com.google.cloud.http.BaseHttpServiceException;\nimport com.google.cloud.http.HttpTransportOptions;\nimport com.google.cloud.resourcemanager.ResourceManagerException;\nimport com.google.cloud.resourcemanager.ResourceManagerOptions;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\nimport com.google.common.collect.ImmutableSet;\nimport org.threeten.bp.Duration;\nimport static com.google.cloud.RetryHelper.runWithRetries;\nimport static com.google.common.base.MoreObjects.firstNonNull;\nimport static java.net.HttpURLConnection.HTTP_FORBIDDEN;\nimport static java.net.HttpURLConnection.HTTP_NOT_FOUND;\n@Deprecated\npublic class HttpResourceManagerRpc implements ResourceManagerRpc {\n    private static final JsonFactory JSON_FACTORY = GsonFactory.getDefaultInstance();\n\n    private static final RetrySettings CREATE_RETRY_SETTINGS = RetrySettings.newBuilder().setTotalTimeout(Duration.ofMinutes(2)).setInitialRetryDelay(Duration.ofSeconds(5)).setRetryDelayMultiplier(1.5).setMaxRetryDelay(Duration.ofSeconds(11)).setJittered(true).setInitialRpcTimeout(Duration.ofSeconds(5)).setMaxRpcTimeout(Duration.ofSeconds(5)).build();\n\n    private static final ImmutableMap<Integer, Integer> RPC_TO_HTTP_CODES = ImmutableMap.<Integer, Integer>builder().put(0, 200).put(1, 499).put(2, 500).put(3, 400).put(4, 504).put(5, 404).put(6, 409).put(7, 403).put(16, 401).put(8, 429).put(9, 400).put(10, 409).put(11, 400).put(12, 501).put(13, 500).put(14, 503).put(15, 500).build();\n\n    private static final ResultRetryAlgorithm<Operation> OPERATION_HANDLER = new ResultRetryAlgorithm<Operation>() {\n        @Override\n        public TimedAttemptSettings createNextAttempt(Throwable prevThrowable, Operation prevResponse, TimedAttemptSettings prevSettings) {\n            return null;\n        }\n\n        @Override\n        public boolean shouldRetry(Throwable prevThrowable, Operation prevOp) {\n            if (prevThrowable == null) {\n                return (prevOp.getDone() == null) || (!prevOp.getDone());\n            }\n            return (prevThrowable instanceof ResourceManagerException) && ((ResourceManagerException) (prevThrowable)).isRetryable();\n        }\n    };\n\n    private final CloudResourceManager resourceManager;\n\n    private final ApiClock clock;\n\n    public HttpResourceManagerRpc(ResourceManagerOptions options) {\n        HttpTransportOptions transportOptions = ((HttpTransportOptions) (options.getTransportOptions()));\n        HttpTransport transport = transportOptions.getHttpTransportFactory().create();\n        HttpRequestInitializer initializer = transportOptions.getHttpRequestInitializer(options);\n        resourceManager = new CloudResourceManager.Builder(transport, JSON_FACTORY, initializer).setRootUrl(options.getHost()).setApplicationName(options.getApplicationName()).build();\n        clock = options.getClock();\n    }\n\n    private static ResourceManagerException translate(IOException exception) {\n        return new ResourceManagerException(exception);\n    }\n\n    private static ResourceManagerException translate(Status status) {\n        Integer code = RPC_TO_HTTP_CODES.get(status.getCode());\n        if (code == null) {\n            code = BaseHttpServiceException.UNKNOWN_CODE;\n        }\n        return new ResourceManagerException(code, status.getMessage());\n    }\n\n    @Override\n    public Project create(Project project) {\n        final Operation operation;\n        try {\n            operation = resourceManager.projects().create(project).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n        Operation finishedOp = runWithRetries(new Callable<Operation>() {\n            @Override\n            public Operation call() {\n                try {\n                    return resourceManager.operations().get(operation.getName()).execute();\n                } catch (IOException ex) {\n                    throw translate(ex);\n                }\n            }\n        }, CREATE_RETRY_SETTINGS, OPERATION_HANDLER, clock);\n        if (finishedOp.getError() != null) {\n            throw translate(finishedOp.getError());\n        }\n        try {\n            String responseTxt = JSON_FACTORY.toString(finishedOp.getResponse());\n            return JSON_FACTORY.fromString(responseTxt, Project.class);\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public void delete(String projectId) {\n        try {\n            resourceManager.projects().delete(projectId).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Project get(String projectId, Map<Option, ?> options) {\n        try {\n            return resourceManager.projects().get(projectId).setFields(Option.FIELDS.getString(options)).execute();\n        } catch (IOException ex) {\n            ResourceManagerException translated = translate(ex);\n            if ((translated.getCode() == HTTP_FORBIDDEN) || (translated.getCode() == HTTP_NOT_FOUND)) {\n                return null;\n            } else {\n                throw translated;\n            }\n        }\n    }\n\n    @Override\n    public Tuple<String, Iterable<Project>> list(Map<Option, ?> options) {\n        try {\n            ListProjectsResponse response = resourceManager.projects().list().setFields(Option.FIELDS.getString(options)).setFilter(Option.FILTER.getString(options)).setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options)).execute();\n            return Tuple.<String, Iterable<Project>>of(response.getNextPageToken(), response.getProjects());\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public void undelete(String projectId) {\n        try {\n            resourceManager.projects().undelete(projectId, new UndeleteProjectRequest()).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Project replace(Project project) {\n        try {\n            return resourceManager.projects().update(project.getProjectId(), project).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Policy getPolicy(String projectId) throws ResourceManagerException {\n        try {\n            return resourceManager.projects().getIamPolicy(projectId, new GetIamPolicyRequest()).execute();\n        } catch (IOException ex) {\n            ResourceManagerException translated = translate(ex);\n            if (translated.getCode() == HTTP_FORBIDDEN) {\n                return null;\n            } else {\n                throw translated;\n            }\n        }\n    }\n\n    @Override\n    public Policy replacePolicy(String projectId, Policy newPolicy) throws ResourceManagerException {\n        try {\n            return resourceManager.projects().setIamPolicy(projectId, new SetIamPolicyRequest().setPolicy(newPolicy)).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public List<Boolean> testPermissions(String projectId, List<String> permissions) throws ResourceManagerException {\n        try {\n            TestIamPermissionsResponse response = resourceManager.projects().testIamPermissions(projectId, new TestIamPermissionsRequest().setPermissions(permissions)).execute();\n            Set<String> permissionsOwned = ImmutableSet.copyOf(firstNonNull(response.getPermissions(), ImmutableList.<String>of()));\n            ImmutableList.Builder<Boolean> answer = ImmutableList.builder();\n            for (String p : permissions) {\n                answer.add(permissionsOwned.contains(p));\n            }\n            return answer.build();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Map<String, Boolean> testOrgPermissions(String resource, List<String> permissions) throws IOException {\n        try {\n            TestIamPermissionsResponse response = resourceManager.organizations().testIamPermissions(resource, new TestIamPermissionsRequest().setPermissions(permissions)).execute();\n            Set<String> permissionsOwned = ImmutableSet.copyOf(firstNonNull(response.getPermissions(), ImmutableList.<String>of()));\n            ImmutableMap.Builder<String, Boolean> answer = ImmutableMap.builder();\n            for (String permission : permissions) {\n                answer.put(permission, permissionsOwned.contains(permission));\n            }\n            return answer.build();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public void clearOrgPolicy(String resource, OrgPolicy orgPolicy) throws IOException {\n        try {\n            resourceManager.folders().clearOrgPolicy(resource, new ClearOrgPolicyRequest().setConstraint(orgPolicy.getConstraint()).setEtag(orgPolicy.getEtag())).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy getEffectiveOrgPolicy(String resource, String constraint) throws IOException {\n        try {\n            return resourceManager.folders().getEffectiveOrgPolicy(resource, new GetEffectiveOrgPolicyRequest().setConstraint(constraint)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy getOrgPolicy(String resource, String constraint) throws IOException {\n        try {\n            return resourceManager.folders().getOrgPolicy(resource, new GetOrgPolicyRequest().setConstraint(constraint)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public ListResult<Constraint> listAvailableOrgPolicyConstraints(String resource, Map<Option, ?> options) throws IOException {\n        try {\n            ListAvailableOrgPolicyConstraintsResponse response = resourceManager.folders().listAvailableOrgPolicyConstraints(resource, new ListAvailableOrgPolicyConstraintsRequest().setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options))).execute();\n            return ListResult.of(response.getNextPageToken(), response.getConstraints());\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public ListResult<OrgPolicy> listOrgPolicies(String resource, Map<Option, ?> options) throws IOException {\n        try {\n            ListOrgPoliciesResponse response = resourceManager.folders().listOrgPolicies(resource, new ListOrgPoliciesRequest().setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options))).execute();\n            return ListResult.of(response.getNextPageToken(), response.getPolicies());\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy replaceOrgPolicy(String resource, OrgPolicy orgPolicy) throws IOException {\n        try {\n            return resourceManager.folders().setOrgPolicy(resource, new SetOrgPolicyRequest().setPolicy(orgPolicy)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n}\n",
    "project": "google-cloud-java",
    "libraryName": "google-api-services-cloudresourcemanager",
    "libraryGroupID": "com.google.apis",
    "newVersion": "v3-rev20220807-2.0.0",
    "previousVersion": "v1-rev20220807-2.0.0",
    "breakingCommit": "471d07e01cd0c79dc9bed5344ed46418f4c078a2",
    "patch": "```java\npackage com.google.cloud.resourcemanager.spi.v1beta1;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.Callable;\nimport com.google.api.client.http.HttpRequestInitializer;\nimport com.google.api.client.http.HttpTransport;\nimport com.google.api.client.json.JsonFactory;\nimport com.google.api.client.json.gson.GsonFactory;\nimport com.google.api.core.ApiClock;\nimport com.google.api.gax.retrying.ResultRetryAlgorithm;\nimport com.google.api.gax.retrying.RetrySettings;\nimport com.google.api.gax.retrying.TimedAttemptSettings;\nimport com.google.api.services.cloudresourcemanager.CloudResourceManager;\nimport com.google.api.services.cloudresourcemanager.model.ClearOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Constraint;\nimport com.google.api.services.cloudresourcemanager.model.GetEffectiveOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.GetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListAvailableOrgPolicyConstraintsResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesRequest;\nimport com.google.api.services.cloudresourcemanager.model.ListOrgPoliciesResponse;\nimport com.google.api.services.cloudresourcemanager.model.ListProjectsResponse;\nimport com.google.api.services.cloudresourcemanager.model.Operation;\nimport com.google.api.services.cloudresourcemanager.model.OrgPolicy;\nimport com.google.api.services.cloudresourcemanager.model.Policy;\nimport com.google.api.services.cloudresourcemanager.model.Project;\nimport com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.SetOrgPolicyRequest;\nimport com.google.api.services.cloudresourcemanager.model.Status;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest;\nimport com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse;\nimport com.google.api.services.cloudresourcemanager.model.UndeleteProjectRequest;\nimport com.google.cloud.RetryHelper;\nimport com.google.cloud.Tuple;\nimport com.google.cloud.http.BaseHttpServiceException;\nimport com.google.cloud.http.HttpTransportOptions;\nimport com.google.cloud.resourcemanager.ResourceManagerException;\nimport com.google.cloud.resourcemanager.ResourceManagerOptions;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\nimport com.google.common.collect.ImmutableSet;\nimport org.threeten.bp.Duration;\nimport static com.google.cloud.RetryHelper.runWithRetries;\nimport static com.google.common.base.MoreObjects.firstNonNull;\nimport static java.net.HttpURLConnection.HTTP_FORBIDDEN;\nimport static java.net.HttpURLConnection.HTTP_NOT_FOUND;\n@Deprecated\npublic class HttpResourceManagerRpc implements ResourceManagerRpc {\n    private static final JsonFactory JSON_FACTORY = GsonFactory.getDefaultInstance();\n\n    private static final RetrySettings CREATE_RETRY_SETTINGS = RetrySettings.newBuilder().setTotalTimeout(Duration.ofMinutes(2)).setInitialRetryDelay(Duration.ofSeconds(5)).setRetryDelayMultiplier(1.5).setMaxRetryDelay(Duration.ofSeconds(11)).setJittered(true).setInitialRpcTimeout(Duration.ofSeconds(5)).setMaxRpcTimeout(Duration.ofSeconds(5)).build();\n\n    private static final ImmutableMap<Integer, Integer> RPC_TO_HTTP_CODES = ImmutableMap.<Integer, Integer>builder().put(0, 200).put(1, 499).put(2, 500).put(3, 400).put(4, 504).put(5, 404).put(6, 409).put(7, 403).put(16, 401).put(8, 429).put(9, 400).put(10, 409).put(11, 400).put(12, 501).put(13, 500).put(14, 503).put(15, 500).build();\n\n    private static final ResultRetryAlgorithm<Operation> OPERATION_HANDLER = new ResultRetryAlgorithm<Operation>() {\n        @Override\n        public TimedAttemptSettings createNextAttempt(Throwable prevThrowable, Operation prevResponse, TimedAttemptSettings prevSettings) {\n            return null;\n        }\n\n        @Override\n        public boolean shouldRetry(Throwable prevThrowable, Operation prevOp) {\n            if (prevThrowable == null) {\n                return (prevOp.getDone() == null) || (!prevOp.getDone());\n            }\n            return (prevThrowable instanceof ResourceManagerException) && ((ResourceManagerException) (prevThrowable)).isRetryable();\n        }\n    };\n\n    private final CloudResourceManager resourceManager;\n\n    private final ApiClock clock;\n\n    public HttpResourceManagerRpc(ResourceManagerOptions options) {\n        HttpTransportOptions transportOptions = ((HttpTransportOptions) (options.getTransportOptions()));\n        HttpTransport transport = transportOptions.getHttpTransportFactory().create();\n        HttpRequestInitializer initializer = transportOptions.getHttpRequestInitializer(options);\n        resourceManager = new CloudResourceManager.Builder(transport, JSON_FACTORY, initializer).setRootUrl(options.getHost()).setApplicationName(options.getApplicationName()).build();\n        clock = options.getClock();\n    }\n\n    private static ResourceManagerException translate(IOException exception) {\n        return new ResourceManagerException(exception);\n    }\n\n    private static ResourceManagerException translate(Status status) {\n        Integer code = RPC_TO_HTTP_CODES.get(status.getCode());\n        if (code == null) {\n            code = BaseHttpServiceException.UNKNOWN_CODE;\n        }\n        return new ResourceManagerException(code, status.getMessage());\n    }\n\n    @Override\n    public Project create(Project project) {\n        final Operation operation;\n        try {\n            operation = resourceManager.projects().create(project).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n        Operation finishedOp = runWithRetries(new Callable<Operation>() {\n            @Override\n            public Operation call() {\n                try {\n                    return resourceManager.operations().get(operation.getName()).execute();\n                } catch (IOException ex) {\n                    throw translate(ex);\n                }\n            }\n        }, CREATE_RETRY_SETTINGS, OPERATION_HANDLER, clock);\n        if (finishedOp.getError() != null) {\n            throw translate(finishedOp.getError());\n        }\n        try {\n            String responseTxt = JSON_FACTORY.toString(finishedOp.getResponse());\n            return JSON_FACTORY.fromString(responseTxt, Project.class);\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public void delete(String projectId) {\n        try {\n            resourceManager.projects().delete(projectId).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Project get(String projectId, Map<Option, ?> options) {\n        try {\n            return resourceManager.projects().get(projectId).setFields(Option.FIELDS.getString(options)).execute();\n        } catch (IOException ex) {\n            ResourceManagerException translated = translate(ex);\n            if ((translated.getCode() == HTTP_FORBIDDEN) || (translated.getCode() == HTTP_NOT_FOUND)) {\n                return null;\n            } else {\n                throw translated;\n            }\n        }\n    }\n\n    @Override\n    public Tuple<String, Iterable<Project>> list(Map<Option, ?> options) {\n        try {\n            ListProjectsResponse response = resourceManager.projects().list().setFields(Option.FIELDS.getString(options)).setFilter(Option.FILTER.getString(options)).setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options)).execute();\n            return Tuple.<String, Iterable<Project>>of(response.getNextPageToken(), response.getProjects());\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public void undelete(String projectId) {\n        try {\n            resourceManager.projects().undelete(projectId, new UndeleteProjectRequest()).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Project replace(Project project) {\n        try {\n            return resourceManager.projects().update(project.getProjectId(), project).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Policy getPolicy(String projectId) throws ResourceManagerException {\n        try {\n            return resourceManager.projects().getIamPolicy(projectId, new GetIamPolicyRequest()).execute();\n        } catch (IOException ex) {\n            ResourceManagerException translated = translate(ex);\n            if (translated.getCode() == HTTP_FORBIDDEN) {\n                return null;\n            } else {\n                throw translated;\n            }\n        }\n    }\n\n    @Override\n    public Policy replacePolicy(String projectId, Policy newPolicy) throws ResourceManagerException {\n        try {\n            return resourceManager.projects().setIamPolicy(projectId, new SetIamPolicyRequest().setPolicy(newPolicy)).execute();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public List<Boolean> testPermissions(String projectId, List<String> permissions) throws ResourceManagerException {\n        try {\n            TestIamPermissionsResponse response = resourceManager.projects().testIamPermissions(projectId, new TestIamPermissionsRequest().setPermissions(permissions)).execute();\n            Set<String> permissionsOwned = ImmutableSet.copyOf(firstNonNull(response.getPermissions(), ImmutableList.<String>of()));\n            ImmutableList.Builder<Boolean> answer = ImmutableList.builder();\n            for (String p : permissions) {\n                answer.add(permissionsOwned.contains(p));\n            }\n            return answer.build();\n        } catch (IOException ex) {\n            throw translate(ex);\n        }\n    }\n\n    @Override\n    public Map<String, Boolean> testOrgPermissions(String resource, List<String> permissions) throws IOException {\n        try {\n            TestIamPermissionsResponse response = resourceManager.organizations().testIamPermissions(resource, new TestIamPermissionsRequest().setPermissions(permissions)).execute();\n            Set<String> permissionsOwned = ImmutableSet.copyOf(firstNonNull(response.getPermissions(), ImmutableList.<String>of()));\n            ImmutableMap.Builder<String, Boolean> answer = ImmutableMap.builder();\n            for (String permission : permissions) {\n                answer.put(permission, permissionsOwned.contains(permission));\n            }\n            return answer.build();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public void clearOrgPolicy(String resource, OrgPolicy orgPolicy) throws IOException {\n        try {\n            resourceManager.folders().clearOrgPolicy(resource, new ClearOrgPolicyRequest().setConstraint(orgPolicy.getConstraint()).setEtag(orgPolicy.getEtag())).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy getEffectiveOrgPolicy(String resource, String constraint) throws IOException {\n        try {\n            return resourceManager.folders().getEffectiveOrgPolicy(resource, new GetEffectiveOrgPolicyRequest().setConstraint(constraint)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy getOrgPolicy(String resource, String constraint) throws IOException {\n        try {\n            return resourceManager.folders().getOrgPolicy(resource, new GetOrgPolicyRequest().setConstraint(constraint)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public ListResult<Constraint> listAvailableOrgPolicyConstraints(String resource, Map<Option, ?> options) throws IOException {\n        try {\n            ListAvailableOrgPolicyConstraintsResponse response = resourceManager.folders().listAvailableOrgPolicyConstraints(resource, new ListAvailableOrgPolicyConstraintsRequest().setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options))).execute();\n            return ListResult.of(response.getNextPageToken(), response.getConstraints());\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public ListResult<OrgPolicy> listOrgPolicies(String resource, Map<Option, ?> options) throws IOException {\n        try {\n            ListOrgPoliciesResponse response = resourceManager.folders().listOrgPolicies(resource, new ListOrgPoliciesRequest().setPageSize(Option.PAGE_SIZE.getInt(options)).setPageToken(Option.PAGE_TOKEN.getString(options))).execute();\n            return ListResult.of(response.getNextPageToken(), response.getPolicies());\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n\n    @Override\n    public OrgPolicy replaceOrgPolicy(String resource, OrgPolicy orgPolicy) throws IOException {\n        try {\n            return resourceManager.folders().setOrgPolicy(resource, new SetOrgPolicyRequest().setPolicy(orgPolicy)).execute();\n        } catch (RetryHelper.RetryHelperException ex) {\n            throw ResourceManagerException.translateAndThrow(ex);\n        }\n    }\n}\n```<end_of_turn>"
}